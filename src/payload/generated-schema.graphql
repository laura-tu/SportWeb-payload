type Query {
  Media(id: String!): Media
  allMedia(where: Media_where, limit: Int, page: Int, sort: String): allMedia
  countallMedia(where: Media_where): countallMedia
  docAccessMedia(id: String!): mediaDocAccess
  User(id: String!): User
  Users(where: User_where, limit: Int, page: Int, sort: String): Users
  countUsers(where: User_where): countUsers
  docAccessUser(id: String!): usersDocAccess
  meUser: usersMe
  initializedUser: Boolean
  C_sport(id: String!): C_sport
  C_sports(where: C_sport_where, limit: Int, page: Int, sort: String): C_sports
  countC_sports(where: C_sport_where): countC_sports
  docAccessC_sport(id: String!): c_sportDocAccess
  C_sport_club(id: String!): C_sport_club
  C_sport_clubs(where: C_sport_club_where, limit: Int, page: Int, sort: String): C_sport_clubs
  countC_sport_clubs(where: C_sport_club_where): countC_sport_clubs
  docAccessC_sport_club(id: String!): c_sport_clubDocAccess
  U_athlete(id: String!): U_athlete
  U_athletes(where: U_athlete_where, limit: Int, page: Int, sort: String): U_athletes
  countU_athletes(where: U_athlete_where): countU_athletes
  docAccessU_athlete(id: String!): u_athleteDocAccess
  U_coach(id: String!): U_coach
  U_coaches(where: U_coach_where, limit: Int, page: Int, sort: String): U_coaches
  countU_coaches(where: U_coach_where): countU_coaches
  docAccessU_coach(id: String!): u_coachDocAccess
  Test_result(id: String!): Test_result
  Test_results(where: Test_result_where, limit: Int, page: Int, sort: String): Test_results
  countTest_results(where: Test_result_where): countTest_results
  docAccessTest_result(id: String!): test_resultsDocAccess
  C_sport_test(id: String!): C_sport_test
  C_sport_tests(where: C_sport_test_where, limit: Int, page: Int, sort: String): C_sport_tests
  countC_sport_tests(where: C_sport_test_where): countC_sport_tests
  docAccessC_sport_test(id: String!): c_sport_testDocAccess
  PayloadPreference(id: String!): PayloadPreference
  PayloadPreferences(where: PayloadPreference_where, limit: Int, page: Int, sort: String): PayloadPreferences
  countPayloadPreferences(where: PayloadPreference_where): countPayloadPreferences
  docAccessPayloadPreference(id: String!): payload_preferencesDocAccess
  Access: Access
}

type Media {
  id: String
  title: String!
  date: DateTime!
  user: User
  alt: String
  caption(depth: Int): JSON
  updatedAt: DateTime
  createdAt: DateTime
  url: String
  filename: String
  mimeType: String
  filesize: Float
  width: Float
  height: Float
  focalX: Float
  focalY: Float
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

type User {
  id: String
  name: String
  roles: [User_roles!]
  updatedAt: DateTime
  createdAt: DateTime
  email: EmailAddress!
  resetPasswordToken: String
  resetPasswordExpiration: DateTime
  salt: String
  hash: String
  loginAttempts: Float
  lockUntil: DateTime
  password: String!
}

enum User_roles {
  admin
  user
  sportCoach
}

"""
A field whose value conforms to the standard internet email address format as specified in HTML Spec: https://html.spec.whatwg.org/multipage/input.html#valid-e-mail-address.
"""
scalar EmailAddress @specifiedBy(url: "https://html.spec.whatwg.org/multipage/input.html#valid-e-mail-address")

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON

type allMedia {
  docs: [Media]
  hasNextPage: Boolean
  hasPrevPage: Boolean
  limit: Int
  nextPage: Int
  offset: Int
  page: Int
  pagingCounter: Int
  prevPage: Int
  totalDocs: Int
  totalPages: Int
}

input Media_where {
  title: Media_title_operator
  date: Media_date_operator
  user: Media_user_operator
  alt: Media_alt_operator
  caption: Media_caption_operator
  updatedAt: Media_updatedAt_operator
  createdAt: Media_createdAt_operator
  url: Media_url_operator
  filename: Media_filename_operator
  mimeType: Media_mimeType_operator
  filesize: Media_filesize_operator
  width: Media_width_operator
  height: Media_height_operator
  focalX: Media_focalX_operator
  focalY: Media_focalY_operator
  id: Media_id_operator
  AND: [Media_where_and]
  OR: [Media_where_or]
}

input Media_title_operator {
  equals: String
  not_equals: String
  like: String
  contains: String
  in: [String]
  not_in: [String]
  all: [String]
}

input Media_date_operator {
  equals: DateTime
  not_equals: DateTime
  greater_than_equal: DateTime
  greater_than: DateTime
  less_than_equal: DateTime
  less_than: DateTime
  like: DateTime
}

input Media_user_operator {
  equals: JSON
  not_equals: JSON
  in: [JSON]
  not_in: [JSON]
  all: [JSON]
  exists: Boolean
}

input Media_alt_operator {
  equals: String
  not_equals: String
  like: String
  contains: String
  in: [String]
  not_in: [String]
  all: [String]
  exists: Boolean
}

input Media_caption_operator {
  equals: JSON
  not_equals: JSON
  like: JSON
  contains: JSON
  exists: Boolean
}

input Media_updatedAt_operator {
  equals: DateTime
  not_equals: DateTime
  greater_than_equal: DateTime
  greater_than: DateTime
  less_than_equal: DateTime
  less_than: DateTime
  like: DateTime
  exists: Boolean
}

input Media_createdAt_operator {
  equals: DateTime
  not_equals: DateTime
  greater_than_equal: DateTime
  greater_than: DateTime
  less_than_equal: DateTime
  less_than: DateTime
  like: DateTime
  exists: Boolean
}

input Media_url_operator {
  equals: String
  not_equals: String
  like: String
  contains: String
  in: [String]
  not_in: [String]
  all: [String]
  exists: Boolean
}

input Media_filename_operator {
  equals: String
  not_equals: String
  like: String
  contains: String
  in: [String]
  not_in: [String]
  all: [String]
  exists: Boolean
}

input Media_mimeType_operator {
  equals: String
  not_equals: String
  like: String
  contains: String
  in: [String]
  not_in: [String]
  all: [String]
  exists: Boolean
}

input Media_filesize_operator {
  equals: Float
  not_equals: Float
  greater_than_equal: Float
  greater_than: Float
  less_than_equal: Float
  less_than: Float
  exists: Boolean
}

input Media_width_operator {
  equals: Float
  not_equals: Float
  greater_than_equal: Float
  greater_than: Float
  less_than_equal: Float
  less_than: Float
  exists: Boolean
}

input Media_height_operator {
  equals: Float
  not_equals: Float
  greater_than_equal: Float
  greater_than: Float
  less_than_equal: Float
  less_than: Float
  exists: Boolean
}

input Media_focalX_operator {
  equals: Float
  not_equals: Float
  greater_than_equal: Float
  greater_than: Float
  less_than_equal: Float
  less_than: Float
  exists: Boolean
}

input Media_focalY_operator {
  equals: Float
  not_equals: Float
  greater_than_equal: Float
  greater_than: Float
  less_than_equal: Float
  less_than: Float
  exists: Boolean
}

input Media_id_operator {
  equals: String
  not_equals: String
  like: String
  contains: String
  in: [String]
  not_in: [String]
  all: [String]
  exists: Boolean
}

input Media_where_and {
  title: Media_title_operator
  date: Media_date_operator
  user: Media_user_operator
  alt: Media_alt_operator
  caption: Media_caption_operator
  updatedAt: Media_updatedAt_operator
  createdAt: Media_createdAt_operator
  url: Media_url_operator
  filename: Media_filename_operator
  mimeType: Media_mimeType_operator
  filesize: Media_filesize_operator
  width: Media_width_operator
  height: Media_height_operator
  focalX: Media_focalX_operator
  focalY: Media_focalY_operator
  id: Media_id_operator
  AND: [Media_where_and]
  OR: [Media_where_or]
}

input Media_where_or {
  title: Media_title_operator
  date: Media_date_operator
  user: Media_user_operator
  alt: Media_alt_operator
  caption: Media_caption_operator
  updatedAt: Media_updatedAt_operator
  createdAt: Media_createdAt_operator
  url: Media_url_operator
  filename: Media_filename_operator
  mimeType: Media_mimeType_operator
  filesize: Media_filesize_operator
  width: Media_width_operator
  height: Media_height_operator
  focalX: Media_focalX_operator
  focalY: Media_focalY_operator
  id: Media_id_operator
  AND: [Media_where_and]
  OR: [Media_where_or]
}

type countallMedia {
  totalDocs: Int
}

type mediaDocAccess {
  fields: MediaDocAccessFields
  create: MediaCreateDocAccess
  read: MediaReadDocAccess
  update: MediaUpdateDocAccess
  delete: MediaDeleteDocAccess
}

type MediaDocAccessFields {
  title: MediaDocAccessFields_title
  date: MediaDocAccessFields_date
  user: MediaDocAccessFields_user
  alt: MediaDocAccessFields_alt
  caption: MediaDocAccessFields_caption
  updatedAt: MediaDocAccessFields_updatedAt
  createdAt: MediaDocAccessFields_createdAt
  url: MediaDocAccessFields_url
  filename: MediaDocAccessFields_filename
  mimeType: MediaDocAccessFields_mimeType
  filesize: MediaDocAccessFields_filesize
  width: MediaDocAccessFields_width
  height: MediaDocAccessFields_height
  focalX: MediaDocAccessFields_focalX
  focalY: MediaDocAccessFields_focalY
}

type MediaDocAccessFields_title {
  create: MediaDocAccessFields_title_Create
  read: MediaDocAccessFields_title_Read
  update: MediaDocAccessFields_title_Update
  delete: MediaDocAccessFields_title_Delete
}

type MediaDocAccessFields_title_Create {
  permission: Boolean!
}

type MediaDocAccessFields_title_Read {
  permission: Boolean!
}

type MediaDocAccessFields_title_Update {
  permission: Boolean!
}

type MediaDocAccessFields_title_Delete {
  permission: Boolean!
}

type MediaDocAccessFields_date {
  create: MediaDocAccessFields_date_Create
  read: MediaDocAccessFields_date_Read
  update: MediaDocAccessFields_date_Update
  delete: MediaDocAccessFields_date_Delete
}

type MediaDocAccessFields_date_Create {
  permission: Boolean!
}

type MediaDocAccessFields_date_Read {
  permission: Boolean!
}

type MediaDocAccessFields_date_Update {
  permission: Boolean!
}

type MediaDocAccessFields_date_Delete {
  permission: Boolean!
}

type MediaDocAccessFields_user {
  create: MediaDocAccessFields_user_Create
  read: MediaDocAccessFields_user_Read
  update: MediaDocAccessFields_user_Update
  delete: MediaDocAccessFields_user_Delete
}

type MediaDocAccessFields_user_Create {
  permission: Boolean!
}

type MediaDocAccessFields_user_Read {
  permission: Boolean!
}

type MediaDocAccessFields_user_Update {
  permission: Boolean!
}

type MediaDocAccessFields_user_Delete {
  permission: Boolean!
}

type MediaDocAccessFields_alt {
  create: MediaDocAccessFields_alt_Create
  read: MediaDocAccessFields_alt_Read
  update: MediaDocAccessFields_alt_Update
  delete: MediaDocAccessFields_alt_Delete
}

type MediaDocAccessFields_alt_Create {
  permission: Boolean!
}

type MediaDocAccessFields_alt_Read {
  permission: Boolean!
}

type MediaDocAccessFields_alt_Update {
  permission: Boolean!
}

type MediaDocAccessFields_alt_Delete {
  permission: Boolean!
}

type MediaDocAccessFields_caption {
  create: MediaDocAccessFields_caption_Create
  read: MediaDocAccessFields_caption_Read
  update: MediaDocAccessFields_caption_Update
  delete: MediaDocAccessFields_caption_Delete
}

type MediaDocAccessFields_caption_Create {
  permission: Boolean!
}

type MediaDocAccessFields_caption_Read {
  permission: Boolean!
}

type MediaDocAccessFields_caption_Update {
  permission: Boolean!
}

type MediaDocAccessFields_caption_Delete {
  permission: Boolean!
}

type MediaDocAccessFields_updatedAt {
  create: MediaDocAccessFields_updatedAt_Create
  read: MediaDocAccessFields_updatedAt_Read
  update: MediaDocAccessFields_updatedAt_Update
  delete: MediaDocAccessFields_updatedAt_Delete
}

type MediaDocAccessFields_updatedAt_Create {
  permission: Boolean!
}

type MediaDocAccessFields_updatedAt_Read {
  permission: Boolean!
}

type MediaDocAccessFields_updatedAt_Update {
  permission: Boolean!
}

type MediaDocAccessFields_updatedAt_Delete {
  permission: Boolean!
}

type MediaDocAccessFields_createdAt {
  create: MediaDocAccessFields_createdAt_Create
  read: MediaDocAccessFields_createdAt_Read
  update: MediaDocAccessFields_createdAt_Update
  delete: MediaDocAccessFields_createdAt_Delete
}

type MediaDocAccessFields_createdAt_Create {
  permission: Boolean!
}

type MediaDocAccessFields_createdAt_Read {
  permission: Boolean!
}

type MediaDocAccessFields_createdAt_Update {
  permission: Boolean!
}

type MediaDocAccessFields_createdAt_Delete {
  permission: Boolean!
}

type MediaDocAccessFields_url {
  create: MediaDocAccessFields_url_Create
  read: MediaDocAccessFields_url_Read
  update: MediaDocAccessFields_url_Update
  delete: MediaDocAccessFields_url_Delete
}

type MediaDocAccessFields_url_Create {
  permission: Boolean!
}

type MediaDocAccessFields_url_Read {
  permission: Boolean!
}

type MediaDocAccessFields_url_Update {
  permission: Boolean!
}

type MediaDocAccessFields_url_Delete {
  permission: Boolean!
}

type MediaDocAccessFields_filename {
  create: MediaDocAccessFields_filename_Create
  read: MediaDocAccessFields_filename_Read
  update: MediaDocAccessFields_filename_Update
  delete: MediaDocAccessFields_filename_Delete
}

type MediaDocAccessFields_filename_Create {
  permission: Boolean!
}

type MediaDocAccessFields_filename_Read {
  permission: Boolean!
}

type MediaDocAccessFields_filename_Update {
  permission: Boolean!
}

type MediaDocAccessFields_filename_Delete {
  permission: Boolean!
}

type MediaDocAccessFields_mimeType {
  create: MediaDocAccessFields_mimeType_Create
  read: MediaDocAccessFields_mimeType_Read
  update: MediaDocAccessFields_mimeType_Update
  delete: MediaDocAccessFields_mimeType_Delete
}

type MediaDocAccessFields_mimeType_Create {
  permission: Boolean!
}

type MediaDocAccessFields_mimeType_Read {
  permission: Boolean!
}

type MediaDocAccessFields_mimeType_Update {
  permission: Boolean!
}

type MediaDocAccessFields_mimeType_Delete {
  permission: Boolean!
}

type MediaDocAccessFields_filesize {
  create: MediaDocAccessFields_filesize_Create
  read: MediaDocAccessFields_filesize_Read
  update: MediaDocAccessFields_filesize_Update
  delete: MediaDocAccessFields_filesize_Delete
}

type MediaDocAccessFields_filesize_Create {
  permission: Boolean!
}

type MediaDocAccessFields_filesize_Read {
  permission: Boolean!
}

type MediaDocAccessFields_filesize_Update {
  permission: Boolean!
}

type MediaDocAccessFields_filesize_Delete {
  permission: Boolean!
}

type MediaDocAccessFields_width {
  create: MediaDocAccessFields_width_Create
  read: MediaDocAccessFields_width_Read
  update: MediaDocAccessFields_width_Update
  delete: MediaDocAccessFields_width_Delete
}

type MediaDocAccessFields_width_Create {
  permission: Boolean!
}

type MediaDocAccessFields_width_Read {
  permission: Boolean!
}

type MediaDocAccessFields_width_Update {
  permission: Boolean!
}

type MediaDocAccessFields_width_Delete {
  permission: Boolean!
}

type MediaDocAccessFields_height {
  create: MediaDocAccessFields_height_Create
  read: MediaDocAccessFields_height_Read
  update: MediaDocAccessFields_height_Update
  delete: MediaDocAccessFields_height_Delete
}

type MediaDocAccessFields_height_Create {
  permission: Boolean!
}

type MediaDocAccessFields_height_Read {
  permission: Boolean!
}

type MediaDocAccessFields_height_Update {
  permission: Boolean!
}

type MediaDocAccessFields_height_Delete {
  permission: Boolean!
}

type MediaDocAccessFields_focalX {
  create: MediaDocAccessFields_focalX_Create
  read: MediaDocAccessFields_focalX_Read
  update: MediaDocAccessFields_focalX_Update
  delete: MediaDocAccessFields_focalX_Delete
}

type MediaDocAccessFields_focalX_Create {
  permission: Boolean!
}

type MediaDocAccessFields_focalX_Read {
  permission: Boolean!
}

type MediaDocAccessFields_focalX_Update {
  permission: Boolean!
}

type MediaDocAccessFields_focalX_Delete {
  permission: Boolean!
}

type MediaDocAccessFields_focalY {
  create: MediaDocAccessFields_focalY_Create
  read: MediaDocAccessFields_focalY_Read
  update: MediaDocAccessFields_focalY_Update
  delete: MediaDocAccessFields_focalY_Delete
}

type MediaDocAccessFields_focalY_Create {
  permission: Boolean!
}

type MediaDocAccessFields_focalY_Read {
  permission: Boolean!
}

type MediaDocAccessFields_focalY_Update {
  permission: Boolean!
}

type MediaDocAccessFields_focalY_Delete {
  permission: Boolean!
}

type MediaCreateDocAccess {
  permission: Boolean!
  where: JSONObject
}

"""
The `JSONObject` scalar type represents JSON objects as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSONObject

type MediaReadDocAccess {
  permission: Boolean!
  where: JSONObject
}

type MediaUpdateDocAccess {
  permission: Boolean!
  where: JSONObject
}

type MediaDeleteDocAccess {
  permission: Boolean!
  where: JSONObject
}

type Users {
  docs: [User]
  hasNextPage: Boolean
  hasPrevPage: Boolean
  limit: Int
  nextPage: Int
  offset: Int
  page: Int
  pagingCounter: Int
  prevPage: Int
  totalDocs: Int
  totalPages: Int
}

input User_where {
  name: User_name_operator
  roles: User_roles_operator
  updatedAt: User_updatedAt_operator
  createdAt: User_createdAt_operator
  email: User_email_operator
  id: User_id_operator
  AND: [User_where_and]
  OR: [User_where_or]
}

input User_name_operator {
  equals: String
  not_equals: String
  like: String
  contains: String
  in: [String]
  not_in: [String]
  all: [String]
  exists: Boolean
}

input User_roles_operator {
  equals: User_roles_Input
  not_equals: User_roles_Input
  in: [User_roles_Input]
  not_in: [User_roles_Input]
  all: [User_roles_Input]
  exists: Boolean
}

enum User_roles_Input {
  admin
  user
  sportCoach
}

input User_updatedAt_operator {
  equals: DateTime
  not_equals: DateTime
  greater_than_equal: DateTime
  greater_than: DateTime
  less_than_equal: DateTime
  less_than: DateTime
  like: DateTime
  exists: Boolean
}

input User_createdAt_operator {
  equals: DateTime
  not_equals: DateTime
  greater_than_equal: DateTime
  greater_than: DateTime
  less_than_equal: DateTime
  less_than: DateTime
  like: DateTime
  exists: Boolean
}

input User_email_operator {
  equals: EmailAddress
  not_equals: EmailAddress
  like: EmailAddress
  contains: EmailAddress
  in: [EmailAddress]
  not_in: [EmailAddress]
  all: [EmailAddress]
}

input User_id_operator {
  equals: String
  not_equals: String
  like: String
  contains: String
  in: [String]
  not_in: [String]
  all: [String]
  exists: Boolean
}

input User_where_and {
  name: User_name_operator
  roles: User_roles_operator
  updatedAt: User_updatedAt_operator
  createdAt: User_createdAt_operator
  email: User_email_operator
  id: User_id_operator
  AND: [User_where_and]
  OR: [User_where_or]
}

input User_where_or {
  name: User_name_operator
  roles: User_roles_operator
  updatedAt: User_updatedAt_operator
  createdAt: User_createdAt_operator
  email: User_email_operator
  id: User_id_operator
  AND: [User_where_and]
  OR: [User_where_or]
}

type countUsers {
  totalDocs: Int
}

type usersDocAccess {
  fields: UsersDocAccessFields
  create: UsersCreateDocAccess
  read: UsersReadDocAccess
  update: UsersUpdateDocAccess
  delete: UsersDeleteDocAccess
  unlock: UsersUnlockDocAccess
}

type UsersDocAccessFields {
  name: UsersDocAccessFields_name
  roles: UsersDocAccessFields_roles
  updatedAt: UsersDocAccessFields_updatedAt
  createdAt: UsersDocAccessFields_createdAt
  email: UsersDocAccessFields_email
  password: UsersDocAccessFields_password
}

type UsersDocAccessFields_name {
  create: UsersDocAccessFields_name_Create
  read: UsersDocAccessFields_name_Read
  update: UsersDocAccessFields_name_Update
  delete: UsersDocAccessFields_name_Delete
}

type UsersDocAccessFields_name_Create {
  permission: Boolean!
}

type UsersDocAccessFields_name_Read {
  permission: Boolean!
}

type UsersDocAccessFields_name_Update {
  permission: Boolean!
}

type UsersDocAccessFields_name_Delete {
  permission: Boolean!
}

type UsersDocAccessFields_roles {
  create: UsersDocAccessFields_roles_Create
  read: UsersDocAccessFields_roles_Read
  update: UsersDocAccessFields_roles_Update
  delete: UsersDocAccessFields_roles_Delete
}

type UsersDocAccessFields_roles_Create {
  permission: Boolean!
}

type UsersDocAccessFields_roles_Read {
  permission: Boolean!
}

type UsersDocAccessFields_roles_Update {
  permission: Boolean!
}

type UsersDocAccessFields_roles_Delete {
  permission: Boolean!
}

type UsersDocAccessFields_updatedAt {
  create: UsersDocAccessFields_updatedAt_Create
  read: UsersDocAccessFields_updatedAt_Read
  update: UsersDocAccessFields_updatedAt_Update
  delete: UsersDocAccessFields_updatedAt_Delete
}

type UsersDocAccessFields_updatedAt_Create {
  permission: Boolean!
}

type UsersDocAccessFields_updatedAt_Read {
  permission: Boolean!
}

type UsersDocAccessFields_updatedAt_Update {
  permission: Boolean!
}

type UsersDocAccessFields_updatedAt_Delete {
  permission: Boolean!
}

type UsersDocAccessFields_createdAt {
  create: UsersDocAccessFields_createdAt_Create
  read: UsersDocAccessFields_createdAt_Read
  update: UsersDocAccessFields_createdAt_Update
  delete: UsersDocAccessFields_createdAt_Delete
}

type UsersDocAccessFields_createdAt_Create {
  permission: Boolean!
}

type UsersDocAccessFields_createdAt_Read {
  permission: Boolean!
}

type UsersDocAccessFields_createdAt_Update {
  permission: Boolean!
}

type UsersDocAccessFields_createdAt_Delete {
  permission: Boolean!
}

type UsersDocAccessFields_email {
  create: UsersDocAccessFields_email_Create
  read: UsersDocAccessFields_email_Read
  update: UsersDocAccessFields_email_Update
  delete: UsersDocAccessFields_email_Delete
}

type UsersDocAccessFields_email_Create {
  permission: Boolean!
}

type UsersDocAccessFields_email_Read {
  permission: Boolean!
}

type UsersDocAccessFields_email_Update {
  permission: Boolean!
}

type UsersDocAccessFields_email_Delete {
  permission: Boolean!
}

type UsersDocAccessFields_password {
  create: UsersDocAccessFields_password_Create
  read: UsersDocAccessFields_password_Read
  update: UsersDocAccessFields_password_Update
  delete: UsersDocAccessFields_password_Delete
}

type UsersDocAccessFields_password_Create {
  permission: Boolean!
}

type UsersDocAccessFields_password_Read {
  permission: Boolean!
}

type UsersDocAccessFields_password_Update {
  permission: Boolean!
}

type UsersDocAccessFields_password_Delete {
  permission: Boolean!
}

type UsersCreateDocAccess {
  permission: Boolean!
  where: JSONObject
}

type UsersReadDocAccess {
  permission: Boolean!
  where: JSONObject
}

type UsersUpdateDocAccess {
  permission: Boolean!
  where: JSONObject
}

type UsersDeleteDocAccess {
  permission: Boolean!
  where: JSONObject
}

type UsersUnlockDocAccess {
  permission: Boolean!
  where: JSONObject
}

type usersMe {
  collection: String
  exp: Int
  strategy: String
  token: String
  user: User
}

type C_sport {
  id: String
  name: String!
  info: String
  updatedAt: DateTime
  createdAt: DateTime
}

type C_sports {
  docs: [C_sport]
  hasNextPage: Boolean
  hasPrevPage: Boolean
  limit: Int
  nextPage: Int
  offset: Int
  page: Int
  pagingCounter: Int
  prevPage: Int
  totalDocs: Int
  totalPages: Int
}

input C_sport_where {
  name: C_sport_name_operator
  info: C_sport_info_operator
  updatedAt: C_sport_updatedAt_operator
  createdAt: C_sport_createdAt_operator
  id: C_sport_id_operator
  AND: [C_sport_where_and]
  OR: [C_sport_where_or]
}

input C_sport_name_operator {
  equals: String
  not_equals: String
  like: String
  contains: String
  in: [String]
  not_in: [String]
  all: [String]
}

input C_sport_info_operator {
  equals: String
  not_equals: String
  like: String
  contains: String
  exists: Boolean
}

input C_sport_updatedAt_operator {
  equals: DateTime
  not_equals: DateTime
  greater_than_equal: DateTime
  greater_than: DateTime
  less_than_equal: DateTime
  less_than: DateTime
  like: DateTime
  exists: Boolean
}

input C_sport_createdAt_operator {
  equals: DateTime
  not_equals: DateTime
  greater_than_equal: DateTime
  greater_than: DateTime
  less_than_equal: DateTime
  less_than: DateTime
  like: DateTime
  exists: Boolean
}

input C_sport_id_operator {
  equals: String
  not_equals: String
  like: String
  contains: String
  in: [String]
  not_in: [String]
  all: [String]
  exists: Boolean
}

input C_sport_where_and {
  name: C_sport_name_operator
  info: C_sport_info_operator
  updatedAt: C_sport_updatedAt_operator
  createdAt: C_sport_createdAt_operator
  id: C_sport_id_operator
  AND: [C_sport_where_and]
  OR: [C_sport_where_or]
}

input C_sport_where_or {
  name: C_sport_name_operator
  info: C_sport_info_operator
  updatedAt: C_sport_updatedAt_operator
  createdAt: C_sport_createdAt_operator
  id: C_sport_id_operator
  AND: [C_sport_where_and]
  OR: [C_sport_where_or]
}

type countC_sports {
  totalDocs: Int
}

type c_sportDocAccess {
  fields: C_sportDocAccessFields
  create: C_sportCreateDocAccess
  read: C_sportReadDocAccess
  update: C_sportUpdateDocAccess
  delete: C_sportDeleteDocAccess
}

type C_sportDocAccessFields {
  name: C_sportDocAccessFields_name
  info: C_sportDocAccessFields_info
  updatedAt: C_sportDocAccessFields_updatedAt
  createdAt: C_sportDocAccessFields_createdAt
}

type C_sportDocAccessFields_name {
  create: C_sportDocAccessFields_name_Create
  read: C_sportDocAccessFields_name_Read
  update: C_sportDocAccessFields_name_Update
  delete: C_sportDocAccessFields_name_Delete
}

type C_sportDocAccessFields_name_Create {
  permission: Boolean!
}

type C_sportDocAccessFields_name_Read {
  permission: Boolean!
}

type C_sportDocAccessFields_name_Update {
  permission: Boolean!
}

type C_sportDocAccessFields_name_Delete {
  permission: Boolean!
}

type C_sportDocAccessFields_info {
  create: C_sportDocAccessFields_info_Create
  read: C_sportDocAccessFields_info_Read
  update: C_sportDocAccessFields_info_Update
  delete: C_sportDocAccessFields_info_Delete
}

type C_sportDocAccessFields_info_Create {
  permission: Boolean!
}

type C_sportDocAccessFields_info_Read {
  permission: Boolean!
}

type C_sportDocAccessFields_info_Update {
  permission: Boolean!
}

type C_sportDocAccessFields_info_Delete {
  permission: Boolean!
}

type C_sportDocAccessFields_updatedAt {
  create: C_sportDocAccessFields_updatedAt_Create
  read: C_sportDocAccessFields_updatedAt_Read
  update: C_sportDocAccessFields_updatedAt_Update
  delete: C_sportDocAccessFields_updatedAt_Delete
}

type C_sportDocAccessFields_updatedAt_Create {
  permission: Boolean!
}

type C_sportDocAccessFields_updatedAt_Read {
  permission: Boolean!
}

type C_sportDocAccessFields_updatedAt_Update {
  permission: Boolean!
}

type C_sportDocAccessFields_updatedAt_Delete {
  permission: Boolean!
}

type C_sportDocAccessFields_createdAt {
  create: C_sportDocAccessFields_createdAt_Create
  read: C_sportDocAccessFields_createdAt_Read
  update: C_sportDocAccessFields_createdAt_Update
  delete: C_sportDocAccessFields_createdAt_Delete
}

type C_sportDocAccessFields_createdAt_Create {
  permission: Boolean!
}

type C_sportDocAccessFields_createdAt_Read {
  permission: Boolean!
}

type C_sportDocAccessFields_createdAt_Update {
  permission: Boolean!
}

type C_sportDocAccessFields_createdAt_Delete {
  permission: Boolean!
}

type C_sportCreateDocAccess {
  permission: Boolean!
  where: JSONObject
}

type C_sportReadDocAccess {
  permission: Boolean!
  where: JSONObject
}

type C_sportUpdateDocAccess {
  permission: Boolean!
  where: JSONObject
}

type C_sportDeleteDocAccess {
  permission: Boolean!
  where: JSONObject
}

type C_sport_club {
  id: String
  name: String!
  short_name: String
  sport: C_sport!
  updatedAt: DateTime
  createdAt: DateTime
}

type C_sport_clubs {
  docs: [C_sport_club]
  hasNextPage: Boolean
  hasPrevPage: Boolean
  limit: Int
  nextPage: Int
  offset: Int
  page: Int
  pagingCounter: Int
  prevPage: Int
  totalDocs: Int
  totalPages: Int
}

input C_sport_club_where {
  name: C_sport_club_name_operator
  short_name: C_sport_club_short_name_operator
  sport: C_sport_club_sport_operator
  updatedAt: C_sport_club_updatedAt_operator
  createdAt: C_sport_club_createdAt_operator
  id: C_sport_club_id_operator
  AND: [C_sport_club_where_and]
  OR: [C_sport_club_where_or]
}

input C_sport_club_name_operator {
  equals: String
  not_equals: String
  like: String
  contains: String
  in: [String]
  not_in: [String]
  all: [String]
}

input C_sport_club_short_name_operator {
  equals: String
  not_equals: String
  like: String
  contains: String
  in: [String]
  not_in: [String]
  all: [String]
  exists: Boolean
}

input C_sport_club_sport_operator {
  equals: JSON
  not_equals: JSON
  in: [JSON]
  not_in: [JSON]
  all: [JSON]
}

input C_sport_club_updatedAt_operator {
  equals: DateTime
  not_equals: DateTime
  greater_than_equal: DateTime
  greater_than: DateTime
  less_than_equal: DateTime
  less_than: DateTime
  like: DateTime
  exists: Boolean
}

input C_sport_club_createdAt_operator {
  equals: DateTime
  not_equals: DateTime
  greater_than_equal: DateTime
  greater_than: DateTime
  less_than_equal: DateTime
  less_than: DateTime
  like: DateTime
  exists: Boolean
}

input C_sport_club_id_operator {
  equals: String
  not_equals: String
  like: String
  contains: String
  in: [String]
  not_in: [String]
  all: [String]
  exists: Boolean
}

input C_sport_club_where_and {
  name: C_sport_club_name_operator
  short_name: C_sport_club_short_name_operator
  sport: C_sport_club_sport_operator
  updatedAt: C_sport_club_updatedAt_operator
  createdAt: C_sport_club_createdAt_operator
  id: C_sport_club_id_operator
  AND: [C_sport_club_where_and]
  OR: [C_sport_club_where_or]
}

input C_sport_club_where_or {
  name: C_sport_club_name_operator
  short_name: C_sport_club_short_name_operator
  sport: C_sport_club_sport_operator
  updatedAt: C_sport_club_updatedAt_operator
  createdAt: C_sport_club_createdAt_operator
  id: C_sport_club_id_operator
  AND: [C_sport_club_where_and]
  OR: [C_sport_club_where_or]
}

type countC_sport_clubs {
  totalDocs: Int
}

type c_sport_clubDocAccess {
  fields: C_sport_clubDocAccessFields
  create: C_sport_clubCreateDocAccess
  read: C_sport_clubReadDocAccess
  update: C_sport_clubUpdateDocAccess
  delete: C_sport_clubDeleteDocAccess
}

type C_sport_clubDocAccessFields {
  name: C_sport_clubDocAccessFields_name
  short_name: C_sport_clubDocAccessFields_short_name
  sport: C_sport_clubDocAccessFields_sport
  updatedAt: C_sport_clubDocAccessFields_updatedAt
  createdAt: C_sport_clubDocAccessFields_createdAt
}

type C_sport_clubDocAccessFields_name {
  create: C_sport_clubDocAccessFields_name_Create
  read: C_sport_clubDocAccessFields_name_Read
  update: C_sport_clubDocAccessFields_name_Update
  delete: C_sport_clubDocAccessFields_name_Delete
}

type C_sport_clubDocAccessFields_name_Create {
  permission: Boolean!
}

type C_sport_clubDocAccessFields_name_Read {
  permission: Boolean!
}

type C_sport_clubDocAccessFields_name_Update {
  permission: Boolean!
}

type C_sport_clubDocAccessFields_name_Delete {
  permission: Boolean!
}

type C_sport_clubDocAccessFields_short_name {
  create: C_sport_clubDocAccessFields_short_name_Create
  read: C_sport_clubDocAccessFields_short_name_Read
  update: C_sport_clubDocAccessFields_short_name_Update
  delete: C_sport_clubDocAccessFields_short_name_Delete
}

type C_sport_clubDocAccessFields_short_name_Create {
  permission: Boolean!
}

type C_sport_clubDocAccessFields_short_name_Read {
  permission: Boolean!
}

type C_sport_clubDocAccessFields_short_name_Update {
  permission: Boolean!
}

type C_sport_clubDocAccessFields_short_name_Delete {
  permission: Boolean!
}

type C_sport_clubDocAccessFields_sport {
  create: C_sport_clubDocAccessFields_sport_Create
  read: C_sport_clubDocAccessFields_sport_Read
  update: C_sport_clubDocAccessFields_sport_Update
  delete: C_sport_clubDocAccessFields_sport_Delete
}

type C_sport_clubDocAccessFields_sport_Create {
  permission: Boolean!
}

type C_sport_clubDocAccessFields_sport_Read {
  permission: Boolean!
}

type C_sport_clubDocAccessFields_sport_Update {
  permission: Boolean!
}

type C_sport_clubDocAccessFields_sport_Delete {
  permission: Boolean!
}

type C_sport_clubDocAccessFields_updatedAt {
  create: C_sport_clubDocAccessFields_updatedAt_Create
  read: C_sport_clubDocAccessFields_updatedAt_Read
  update: C_sport_clubDocAccessFields_updatedAt_Update
  delete: C_sport_clubDocAccessFields_updatedAt_Delete
}

type C_sport_clubDocAccessFields_updatedAt_Create {
  permission: Boolean!
}

type C_sport_clubDocAccessFields_updatedAt_Read {
  permission: Boolean!
}

type C_sport_clubDocAccessFields_updatedAt_Update {
  permission: Boolean!
}

type C_sport_clubDocAccessFields_updatedAt_Delete {
  permission: Boolean!
}

type C_sport_clubDocAccessFields_createdAt {
  create: C_sport_clubDocAccessFields_createdAt_Create
  read: C_sport_clubDocAccessFields_createdAt_Read
  update: C_sport_clubDocAccessFields_createdAt_Update
  delete: C_sport_clubDocAccessFields_createdAt_Delete
}

type C_sport_clubDocAccessFields_createdAt_Create {
  permission: Boolean!
}

type C_sport_clubDocAccessFields_createdAt_Read {
  permission: Boolean!
}

type C_sport_clubDocAccessFields_createdAt_Update {
  permission: Boolean!
}

type C_sport_clubDocAccessFields_createdAt_Delete {
  permission: Boolean!
}

type C_sport_clubCreateDocAccess {
  permission: Boolean!
  where: JSONObject
}

type C_sport_clubReadDocAccess {
  permission: Boolean!
  where: JSONObject
}

type C_sport_clubUpdateDocAccess {
  permission: Boolean!
  where: JSONObject
}

type C_sport_clubDeleteDocAccess {
  permission: Boolean!
  where: JSONObject
}

type U_athlete {
  id: String
  user: User
  name: String
  birth_date: DateTime!
  gender: U_athlete_gender
  sport: [C_sport!]!
  club: C_sport_club
  updatedAt: DateTime
  createdAt: DateTime
}

enum U_athlete_gender {
  muz
  zena
}

type U_athletes {
  docs: [U_athlete]
  hasNextPage: Boolean
  hasPrevPage: Boolean
  limit: Int
  nextPage: Int
  offset: Int
  page: Int
  pagingCounter: Int
  prevPage: Int
  totalDocs: Int
  totalPages: Int
}

input U_athlete_where {
  user: U_athlete_user_operator
  name: U_athlete_name_operator
  birth_date: U_athlete_birth_date_operator
  gender: U_athlete_gender_operator
  sport: U_athlete_sport_operator
  club: U_athlete_club_operator
  updatedAt: U_athlete_updatedAt_operator
  createdAt: U_athlete_createdAt_operator
  id: U_athlete_id_operator
  AND: [U_athlete_where_and]
  OR: [U_athlete_where_or]
}

input U_athlete_user_operator {
  equals: JSON
  not_equals: JSON
  in: [JSON]
  not_in: [JSON]
  all: [JSON]
  exists: Boolean
}

input U_athlete_name_operator {
  equals: String
  not_equals: String
  like: String
  contains: String
  in: [String]
  not_in: [String]
  all: [String]
  exists: Boolean
}

input U_athlete_birth_date_operator {
  equals: DateTime
  not_equals: DateTime
  greater_than_equal: DateTime
  greater_than: DateTime
  less_than_equal: DateTime
  less_than: DateTime
  like: DateTime
}

input U_athlete_gender_operator {
  equals: U_athlete_gender_Input
  not_equals: U_athlete_gender_Input
  in: [U_athlete_gender_Input]
  not_in: [U_athlete_gender_Input]
  all: [U_athlete_gender_Input]
  exists: Boolean
}

enum U_athlete_gender_Input {
  muz
  zena
}

input U_athlete_sport_operator {
  equals: JSON
  not_equals: JSON
  in: [JSON]
  not_in: [JSON]
  all: [JSON]
}

input U_athlete_club_operator {
  equals: JSON
  not_equals: JSON
  in: [JSON]
  not_in: [JSON]
  all: [JSON]
  exists: Boolean
}

input U_athlete_updatedAt_operator {
  equals: DateTime
  not_equals: DateTime
  greater_than_equal: DateTime
  greater_than: DateTime
  less_than_equal: DateTime
  less_than: DateTime
  like: DateTime
  exists: Boolean
}

input U_athlete_createdAt_operator {
  equals: DateTime
  not_equals: DateTime
  greater_than_equal: DateTime
  greater_than: DateTime
  less_than_equal: DateTime
  less_than: DateTime
  like: DateTime
  exists: Boolean
}

input U_athlete_id_operator {
  equals: String
  not_equals: String
  like: String
  contains: String
  in: [String]
  not_in: [String]
  all: [String]
  exists: Boolean
}

input U_athlete_where_and {
  user: U_athlete_user_operator
  name: U_athlete_name_operator
  birth_date: U_athlete_birth_date_operator
  gender: U_athlete_gender_operator
  sport: U_athlete_sport_operator
  club: U_athlete_club_operator
  updatedAt: U_athlete_updatedAt_operator
  createdAt: U_athlete_createdAt_operator
  id: U_athlete_id_operator
  AND: [U_athlete_where_and]
  OR: [U_athlete_where_or]
}

input U_athlete_where_or {
  user: U_athlete_user_operator
  name: U_athlete_name_operator
  birth_date: U_athlete_birth_date_operator
  gender: U_athlete_gender_operator
  sport: U_athlete_sport_operator
  club: U_athlete_club_operator
  updatedAt: U_athlete_updatedAt_operator
  createdAt: U_athlete_createdAt_operator
  id: U_athlete_id_operator
  AND: [U_athlete_where_and]
  OR: [U_athlete_where_or]
}

type countU_athletes {
  totalDocs: Int
}

type u_athleteDocAccess {
  fields: U_athleteDocAccessFields
  create: U_athleteCreateDocAccess
  read: U_athleteReadDocAccess
  update: U_athleteUpdateDocAccess
  delete: U_athleteDeleteDocAccess
}

type U_athleteDocAccessFields {
  user: U_athleteDocAccessFields_user
  name: U_athleteDocAccessFields_name
  birth_date: U_athleteDocAccessFields_birth_date
  gender: U_athleteDocAccessFields_gender
  sport: U_athleteDocAccessFields_sport
  club: U_athleteDocAccessFields_club
  updatedAt: U_athleteDocAccessFields_updatedAt
  createdAt: U_athleteDocAccessFields_createdAt
}

type U_athleteDocAccessFields_user {
  create: U_athleteDocAccessFields_user_Create
  read: U_athleteDocAccessFields_user_Read
  update: U_athleteDocAccessFields_user_Update
  delete: U_athleteDocAccessFields_user_Delete
}

type U_athleteDocAccessFields_user_Create {
  permission: Boolean!
}

type U_athleteDocAccessFields_user_Read {
  permission: Boolean!
}

type U_athleteDocAccessFields_user_Update {
  permission: Boolean!
}

type U_athleteDocAccessFields_user_Delete {
  permission: Boolean!
}

type U_athleteDocAccessFields_name {
  create: U_athleteDocAccessFields_name_Create
  read: U_athleteDocAccessFields_name_Read
  update: U_athleteDocAccessFields_name_Update
  delete: U_athleteDocAccessFields_name_Delete
}

type U_athleteDocAccessFields_name_Create {
  permission: Boolean!
}

type U_athleteDocAccessFields_name_Read {
  permission: Boolean!
}

type U_athleteDocAccessFields_name_Update {
  permission: Boolean!
}

type U_athleteDocAccessFields_name_Delete {
  permission: Boolean!
}

type U_athleteDocAccessFields_birth_date {
  create: U_athleteDocAccessFields_birth_date_Create
  read: U_athleteDocAccessFields_birth_date_Read
  update: U_athleteDocAccessFields_birth_date_Update
  delete: U_athleteDocAccessFields_birth_date_Delete
}

type U_athleteDocAccessFields_birth_date_Create {
  permission: Boolean!
}

type U_athleteDocAccessFields_birth_date_Read {
  permission: Boolean!
}

type U_athleteDocAccessFields_birth_date_Update {
  permission: Boolean!
}

type U_athleteDocAccessFields_birth_date_Delete {
  permission: Boolean!
}

type U_athleteDocAccessFields_gender {
  create: U_athleteDocAccessFields_gender_Create
  read: U_athleteDocAccessFields_gender_Read
  update: U_athleteDocAccessFields_gender_Update
  delete: U_athleteDocAccessFields_gender_Delete
}

type U_athleteDocAccessFields_gender_Create {
  permission: Boolean!
}

type U_athleteDocAccessFields_gender_Read {
  permission: Boolean!
}

type U_athleteDocAccessFields_gender_Update {
  permission: Boolean!
}

type U_athleteDocAccessFields_gender_Delete {
  permission: Boolean!
}

type U_athleteDocAccessFields_sport {
  create: U_athleteDocAccessFields_sport_Create
  read: U_athleteDocAccessFields_sport_Read
  update: U_athleteDocAccessFields_sport_Update
  delete: U_athleteDocAccessFields_sport_Delete
}

type U_athleteDocAccessFields_sport_Create {
  permission: Boolean!
}

type U_athleteDocAccessFields_sport_Read {
  permission: Boolean!
}

type U_athleteDocAccessFields_sport_Update {
  permission: Boolean!
}

type U_athleteDocAccessFields_sport_Delete {
  permission: Boolean!
}

type U_athleteDocAccessFields_club {
  create: U_athleteDocAccessFields_club_Create
  read: U_athleteDocAccessFields_club_Read
  update: U_athleteDocAccessFields_club_Update
  delete: U_athleteDocAccessFields_club_Delete
}

type U_athleteDocAccessFields_club_Create {
  permission: Boolean!
}

type U_athleteDocAccessFields_club_Read {
  permission: Boolean!
}

type U_athleteDocAccessFields_club_Update {
  permission: Boolean!
}

type U_athleteDocAccessFields_club_Delete {
  permission: Boolean!
}

type U_athleteDocAccessFields_updatedAt {
  create: U_athleteDocAccessFields_updatedAt_Create
  read: U_athleteDocAccessFields_updatedAt_Read
  update: U_athleteDocAccessFields_updatedAt_Update
  delete: U_athleteDocAccessFields_updatedAt_Delete
}

type U_athleteDocAccessFields_updatedAt_Create {
  permission: Boolean!
}

type U_athleteDocAccessFields_updatedAt_Read {
  permission: Boolean!
}

type U_athleteDocAccessFields_updatedAt_Update {
  permission: Boolean!
}

type U_athleteDocAccessFields_updatedAt_Delete {
  permission: Boolean!
}

type U_athleteDocAccessFields_createdAt {
  create: U_athleteDocAccessFields_createdAt_Create
  read: U_athleteDocAccessFields_createdAt_Read
  update: U_athleteDocAccessFields_createdAt_Update
  delete: U_athleteDocAccessFields_createdAt_Delete
}

type U_athleteDocAccessFields_createdAt_Create {
  permission: Boolean!
}

type U_athleteDocAccessFields_createdAt_Read {
  permission: Boolean!
}

type U_athleteDocAccessFields_createdAt_Update {
  permission: Boolean!
}

type U_athleteDocAccessFields_createdAt_Delete {
  permission: Boolean!
}

type U_athleteCreateDocAccess {
  permission: Boolean!
  where: JSONObject
}

type U_athleteReadDocAccess {
  permission: Boolean!
  where: JSONObject
}

type U_athleteUpdateDocAccess {
  permission: Boolean!
  where: JSONObject
}

type U_athleteDeleteDocAccess {
  permission: Boolean!
  where: JSONObject
}

type U_coach {
  id: String
  user: User
  name: String
  sport: [C_sport!]!
  club: C_sport_club
  athletes: [U_athlete!]
  updatedAt: DateTime
  createdAt: DateTime
}

type U_coaches {
  docs: [U_coach]
  hasNextPage: Boolean
  hasPrevPage: Boolean
  limit: Int
  nextPage: Int
  offset: Int
  page: Int
  pagingCounter: Int
  prevPage: Int
  totalDocs: Int
  totalPages: Int
}

input U_coach_where {
  user: U_coach_user_operator
  name: U_coach_name_operator
  sport: U_coach_sport_operator
  club: U_coach_club_operator
  athletes: U_coach_athletes_operator
  updatedAt: U_coach_updatedAt_operator
  createdAt: U_coach_createdAt_operator
  id: U_coach_id_operator
  AND: [U_coach_where_and]
  OR: [U_coach_where_or]
}

input U_coach_user_operator {
  equals: JSON
  not_equals: JSON
  in: [JSON]
  not_in: [JSON]
  all: [JSON]
  exists: Boolean
}

input U_coach_name_operator {
  equals: String
  not_equals: String
  like: String
  contains: String
  in: [String]
  not_in: [String]
  all: [String]
  exists: Boolean
}

input U_coach_sport_operator {
  equals: JSON
  not_equals: JSON
  in: [JSON]
  not_in: [JSON]
  all: [JSON]
}

input U_coach_club_operator {
  equals: JSON
  not_equals: JSON
  in: [JSON]
  not_in: [JSON]
  all: [JSON]
  exists: Boolean
}

input U_coach_athletes_operator {
  equals: JSON
  not_equals: JSON
  in: [JSON]
  not_in: [JSON]
  all: [JSON]
  exists: Boolean
}

input U_coach_updatedAt_operator {
  equals: DateTime
  not_equals: DateTime
  greater_than_equal: DateTime
  greater_than: DateTime
  less_than_equal: DateTime
  less_than: DateTime
  like: DateTime
  exists: Boolean
}

input U_coach_createdAt_operator {
  equals: DateTime
  not_equals: DateTime
  greater_than_equal: DateTime
  greater_than: DateTime
  less_than_equal: DateTime
  less_than: DateTime
  like: DateTime
  exists: Boolean
}

input U_coach_id_operator {
  equals: String
  not_equals: String
  like: String
  contains: String
  in: [String]
  not_in: [String]
  all: [String]
  exists: Boolean
}

input U_coach_where_and {
  user: U_coach_user_operator
  name: U_coach_name_operator
  sport: U_coach_sport_operator
  club: U_coach_club_operator
  athletes: U_coach_athletes_operator
  updatedAt: U_coach_updatedAt_operator
  createdAt: U_coach_createdAt_operator
  id: U_coach_id_operator
  AND: [U_coach_where_and]
  OR: [U_coach_where_or]
}

input U_coach_where_or {
  user: U_coach_user_operator
  name: U_coach_name_operator
  sport: U_coach_sport_operator
  club: U_coach_club_operator
  athletes: U_coach_athletes_operator
  updatedAt: U_coach_updatedAt_operator
  createdAt: U_coach_createdAt_operator
  id: U_coach_id_operator
  AND: [U_coach_where_and]
  OR: [U_coach_where_or]
}

type countU_coaches {
  totalDocs: Int
}

type u_coachDocAccess {
  fields: U_coachDocAccessFields
  create: U_coachCreateDocAccess
  read: U_coachReadDocAccess
  update: U_coachUpdateDocAccess
  delete: U_coachDeleteDocAccess
}

type U_coachDocAccessFields {
  user: U_coachDocAccessFields_user
  name: U_coachDocAccessFields_name
  sport: U_coachDocAccessFields_sport
  club: U_coachDocAccessFields_club
  athletes: U_coachDocAccessFields_athletes
  updatedAt: U_coachDocAccessFields_updatedAt
  createdAt: U_coachDocAccessFields_createdAt
}

type U_coachDocAccessFields_user {
  create: U_coachDocAccessFields_user_Create
  read: U_coachDocAccessFields_user_Read
  update: U_coachDocAccessFields_user_Update
  delete: U_coachDocAccessFields_user_Delete
}

type U_coachDocAccessFields_user_Create {
  permission: Boolean!
}

type U_coachDocAccessFields_user_Read {
  permission: Boolean!
}

type U_coachDocAccessFields_user_Update {
  permission: Boolean!
}

type U_coachDocAccessFields_user_Delete {
  permission: Boolean!
}

type U_coachDocAccessFields_name {
  create: U_coachDocAccessFields_name_Create
  read: U_coachDocAccessFields_name_Read
  update: U_coachDocAccessFields_name_Update
  delete: U_coachDocAccessFields_name_Delete
}

type U_coachDocAccessFields_name_Create {
  permission: Boolean!
}

type U_coachDocAccessFields_name_Read {
  permission: Boolean!
}

type U_coachDocAccessFields_name_Update {
  permission: Boolean!
}

type U_coachDocAccessFields_name_Delete {
  permission: Boolean!
}

type U_coachDocAccessFields_sport {
  create: U_coachDocAccessFields_sport_Create
  read: U_coachDocAccessFields_sport_Read
  update: U_coachDocAccessFields_sport_Update
  delete: U_coachDocAccessFields_sport_Delete
}

type U_coachDocAccessFields_sport_Create {
  permission: Boolean!
}

type U_coachDocAccessFields_sport_Read {
  permission: Boolean!
}

type U_coachDocAccessFields_sport_Update {
  permission: Boolean!
}

type U_coachDocAccessFields_sport_Delete {
  permission: Boolean!
}

type U_coachDocAccessFields_club {
  create: U_coachDocAccessFields_club_Create
  read: U_coachDocAccessFields_club_Read
  update: U_coachDocAccessFields_club_Update
  delete: U_coachDocAccessFields_club_Delete
}

type U_coachDocAccessFields_club_Create {
  permission: Boolean!
}

type U_coachDocAccessFields_club_Read {
  permission: Boolean!
}

type U_coachDocAccessFields_club_Update {
  permission: Boolean!
}

type U_coachDocAccessFields_club_Delete {
  permission: Boolean!
}

type U_coachDocAccessFields_athletes {
  create: U_coachDocAccessFields_athletes_Create
  read: U_coachDocAccessFields_athletes_Read
  update: U_coachDocAccessFields_athletes_Update
  delete: U_coachDocAccessFields_athletes_Delete
}

type U_coachDocAccessFields_athletes_Create {
  permission: Boolean!
}

type U_coachDocAccessFields_athletes_Read {
  permission: Boolean!
}

type U_coachDocAccessFields_athletes_Update {
  permission: Boolean!
}

type U_coachDocAccessFields_athletes_Delete {
  permission: Boolean!
}

type U_coachDocAccessFields_updatedAt {
  create: U_coachDocAccessFields_updatedAt_Create
  read: U_coachDocAccessFields_updatedAt_Read
  update: U_coachDocAccessFields_updatedAt_Update
  delete: U_coachDocAccessFields_updatedAt_Delete
}

type U_coachDocAccessFields_updatedAt_Create {
  permission: Boolean!
}

type U_coachDocAccessFields_updatedAt_Read {
  permission: Boolean!
}

type U_coachDocAccessFields_updatedAt_Update {
  permission: Boolean!
}

type U_coachDocAccessFields_updatedAt_Delete {
  permission: Boolean!
}

type U_coachDocAccessFields_createdAt {
  create: U_coachDocAccessFields_createdAt_Create
  read: U_coachDocAccessFields_createdAt_Read
  update: U_coachDocAccessFields_createdAt_Update
  delete: U_coachDocAccessFields_createdAt_Delete
}

type U_coachDocAccessFields_createdAt_Create {
  permission: Boolean!
}

type U_coachDocAccessFields_createdAt_Read {
  permission: Boolean!
}

type U_coachDocAccessFields_createdAt_Update {
  permission: Boolean!
}

type U_coachDocAccessFields_createdAt_Delete {
  permission: Boolean!
}

type U_coachCreateDocAccess {
  permission: Boolean!
  where: JSONObject
}

type U_coachReadDocAccess {
  permission: Boolean!
  where: JSONObject
}

type U_coachUpdateDocAccess {
  permission: Boolean!
  where: JSONObject
}

type U_coachDeleteDocAccess {
  permission: Boolean!
  where: JSONObject
}

type Test_result {
  id: String
  athlete: U_athlete!
  testType: C_sport_test!
  resultData(where: Test_result_ResultData_where): Media!
  date: DateTime!
  notes: String
  updatedAt: DateTime
  createdAt: DateTime
}

type C_sport_test {
  id: String
  name: String!
  short_name: String!
  description: String
  updatedAt: DateTime
  createdAt: DateTime
}

input Test_result_ResultData_where {
  title: Test_result_ResultData_title_operator
  date: Test_result_ResultData_date_operator
  user: Test_result_ResultData_user_operator
  alt: Test_result_ResultData_alt_operator
  caption: Test_result_ResultData_caption_operator
  updatedAt: Test_result_ResultData_updatedAt_operator
  createdAt: Test_result_ResultData_createdAt_operator
  url: Test_result_ResultData_url_operator
  filename: Test_result_ResultData_filename_operator
  mimeType: Test_result_ResultData_mimeType_operator
  filesize: Test_result_ResultData_filesize_operator
  width: Test_result_ResultData_width_operator
  height: Test_result_ResultData_height_operator
  focalX: Test_result_ResultData_focalX_operator
  focalY: Test_result_ResultData_focalY_operator
  id: Test_result_ResultData_id_operator
  AND: [Test_result_ResultData_where_and]
  OR: [Test_result_ResultData_where_or]
}

input Test_result_ResultData_title_operator {
  equals: String
  not_equals: String
  like: String
  contains: String
  in: [String]
  not_in: [String]
  all: [String]
}

input Test_result_ResultData_date_operator {
  equals: DateTime
  not_equals: DateTime
  greater_than_equal: DateTime
  greater_than: DateTime
  less_than_equal: DateTime
  less_than: DateTime
  like: DateTime
}

input Test_result_ResultData_user_operator {
  equals: JSON
  not_equals: JSON
  in: [JSON]
  not_in: [JSON]
  all: [JSON]
  exists: Boolean
}

input Test_result_ResultData_alt_operator {
  equals: String
  not_equals: String
  like: String
  contains: String
  in: [String]
  not_in: [String]
  all: [String]
  exists: Boolean
}

input Test_result_ResultData_caption_operator {
  equals: JSON
  not_equals: JSON
  like: JSON
  contains: JSON
  exists: Boolean
}

input Test_result_ResultData_updatedAt_operator {
  equals: DateTime
  not_equals: DateTime
  greater_than_equal: DateTime
  greater_than: DateTime
  less_than_equal: DateTime
  less_than: DateTime
  like: DateTime
  exists: Boolean
}

input Test_result_ResultData_createdAt_operator {
  equals: DateTime
  not_equals: DateTime
  greater_than_equal: DateTime
  greater_than: DateTime
  less_than_equal: DateTime
  less_than: DateTime
  like: DateTime
  exists: Boolean
}

input Test_result_ResultData_url_operator {
  equals: String
  not_equals: String
  like: String
  contains: String
  in: [String]
  not_in: [String]
  all: [String]
  exists: Boolean
}

input Test_result_ResultData_filename_operator {
  equals: String
  not_equals: String
  like: String
  contains: String
  in: [String]
  not_in: [String]
  all: [String]
  exists: Boolean
}

input Test_result_ResultData_mimeType_operator {
  equals: String
  not_equals: String
  like: String
  contains: String
  in: [String]
  not_in: [String]
  all: [String]
  exists: Boolean
}

input Test_result_ResultData_filesize_operator {
  equals: Float
  not_equals: Float
  greater_than_equal: Float
  greater_than: Float
  less_than_equal: Float
  less_than: Float
  exists: Boolean
}

input Test_result_ResultData_width_operator {
  equals: Float
  not_equals: Float
  greater_than_equal: Float
  greater_than: Float
  less_than_equal: Float
  less_than: Float
  exists: Boolean
}

input Test_result_ResultData_height_operator {
  equals: Float
  not_equals: Float
  greater_than_equal: Float
  greater_than: Float
  less_than_equal: Float
  less_than: Float
  exists: Boolean
}

input Test_result_ResultData_focalX_operator {
  equals: Float
  not_equals: Float
  greater_than_equal: Float
  greater_than: Float
  less_than_equal: Float
  less_than: Float
  exists: Boolean
}

input Test_result_ResultData_focalY_operator {
  equals: Float
  not_equals: Float
  greater_than_equal: Float
  greater_than: Float
  less_than_equal: Float
  less_than: Float
  exists: Boolean
}

input Test_result_ResultData_id_operator {
  equals: String
  not_equals: String
  like: String
  contains: String
  in: [String]
  not_in: [String]
  all: [String]
  exists: Boolean
}

input Test_result_ResultData_where_and {
  title: Test_result_ResultData_title_operator
  date: Test_result_ResultData_date_operator
  user: Test_result_ResultData_user_operator
  alt: Test_result_ResultData_alt_operator
  caption: Test_result_ResultData_caption_operator
  updatedAt: Test_result_ResultData_updatedAt_operator
  createdAt: Test_result_ResultData_createdAt_operator
  url: Test_result_ResultData_url_operator
  filename: Test_result_ResultData_filename_operator
  mimeType: Test_result_ResultData_mimeType_operator
  filesize: Test_result_ResultData_filesize_operator
  width: Test_result_ResultData_width_operator
  height: Test_result_ResultData_height_operator
  focalX: Test_result_ResultData_focalX_operator
  focalY: Test_result_ResultData_focalY_operator
  id: Test_result_ResultData_id_operator
  AND: [Test_result_ResultData_where_and]
  OR: [Test_result_ResultData_where_or]
}

input Test_result_ResultData_where_or {
  title: Test_result_ResultData_title_operator
  date: Test_result_ResultData_date_operator
  user: Test_result_ResultData_user_operator
  alt: Test_result_ResultData_alt_operator
  caption: Test_result_ResultData_caption_operator
  updatedAt: Test_result_ResultData_updatedAt_operator
  createdAt: Test_result_ResultData_createdAt_operator
  url: Test_result_ResultData_url_operator
  filename: Test_result_ResultData_filename_operator
  mimeType: Test_result_ResultData_mimeType_operator
  filesize: Test_result_ResultData_filesize_operator
  width: Test_result_ResultData_width_operator
  height: Test_result_ResultData_height_operator
  focalX: Test_result_ResultData_focalX_operator
  focalY: Test_result_ResultData_focalY_operator
  id: Test_result_ResultData_id_operator
  AND: [Test_result_ResultData_where_and]
  OR: [Test_result_ResultData_where_or]
}

type Test_results {
  docs: [Test_result]
  hasNextPage: Boolean
  hasPrevPage: Boolean
  limit: Int
  nextPage: Int
  offset: Int
  page: Int
  pagingCounter: Int
  prevPage: Int
  totalDocs: Int
  totalPages: Int
}

input Test_result_where {
  athlete: Test_result_athlete_operator
  testType: Test_result_testType_operator
  resultData: Test_result_resultData_operator
  date: Test_result_date_operator
  notes: Test_result_notes_operator
  updatedAt: Test_result_updatedAt_operator
  createdAt: Test_result_createdAt_operator
  id: Test_result_id_operator
  AND: [Test_result_where_and]
  OR: [Test_result_where_or]
}

input Test_result_athlete_operator {
  equals: JSON
  not_equals: JSON
  in: [JSON]
  not_in: [JSON]
  all: [JSON]
}

input Test_result_testType_operator {
  equals: JSON
  not_equals: JSON
  in: [JSON]
  not_in: [JSON]
  all: [JSON]
}

input Test_result_resultData_operator {
  equals: String
  not_equals: String
}

input Test_result_date_operator {
  equals: DateTime
  not_equals: DateTime
  greater_than_equal: DateTime
  greater_than: DateTime
  less_than_equal: DateTime
  less_than: DateTime
  like: DateTime
}

input Test_result_notes_operator {
  equals: String
  not_equals: String
  like: String
  contains: String
  exists: Boolean
}

input Test_result_updatedAt_operator {
  equals: DateTime
  not_equals: DateTime
  greater_than_equal: DateTime
  greater_than: DateTime
  less_than_equal: DateTime
  less_than: DateTime
  like: DateTime
  exists: Boolean
}

input Test_result_createdAt_operator {
  equals: DateTime
  not_equals: DateTime
  greater_than_equal: DateTime
  greater_than: DateTime
  less_than_equal: DateTime
  less_than: DateTime
  like: DateTime
  exists: Boolean
}

input Test_result_id_operator {
  equals: String
  not_equals: String
  like: String
  contains: String
  in: [String]
  not_in: [String]
  all: [String]
  exists: Boolean
}

input Test_result_where_and {
  athlete: Test_result_athlete_operator
  testType: Test_result_testType_operator
  resultData: Test_result_resultData_operator
  date: Test_result_date_operator
  notes: Test_result_notes_operator
  updatedAt: Test_result_updatedAt_operator
  createdAt: Test_result_createdAt_operator
  id: Test_result_id_operator
  AND: [Test_result_where_and]
  OR: [Test_result_where_or]
}

input Test_result_where_or {
  athlete: Test_result_athlete_operator
  testType: Test_result_testType_operator
  resultData: Test_result_resultData_operator
  date: Test_result_date_operator
  notes: Test_result_notes_operator
  updatedAt: Test_result_updatedAt_operator
  createdAt: Test_result_createdAt_operator
  id: Test_result_id_operator
  AND: [Test_result_where_and]
  OR: [Test_result_where_or]
}

type countTest_results {
  totalDocs: Int
}

type test_resultsDocAccess {
  fields: Test_resultsDocAccessFields
  create: Test_resultsCreateDocAccess
  read: Test_resultsReadDocAccess
  update: Test_resultsUpdateDocAccess
  delete: Test_resultsDeleteDocAccess
}

type Test_resultsDocAccessFields {
  athlete: Test_resultsDocAccessFields_athlete
  testType: Test_resultsDocAccessFields_testType
  resultData: Test_resultsDocAccessFields_resultData
  date: Test_resultsDocAccessFields_date
  notes: Test_resultsDocAccessFields_notes
  updatedAt: Test_resultsDocAccessFields_updatedAt
  createdAt: Test_resultsDocAccessFields_createdAt
}

type Test_resultsDocAccessFields_athlete {
  create: Test_resultsDocAccessFields_athlete_Create
  read: Test_resultsDocAccessFields_athlete_Read
  update: Test_resultsDocAccessFields_athlete_Update
  delete: Test_resultsDocAccessFields_athlete_Delete
}

type Test_resultsDocAccessFields_athlete_Create {
  permission: Boolean!
}

type Test_resultsDocAccessFields_athlete_Read {
  permission: Boolean!
}

type Test_resultsDocAccessFields_athlete_Update {
  permission: Boolean!
}

type Test_resultsDocAccessFields_athlete_Delete {
  permission: Boolean!
}

type Test_resultsDocAccessFields_testType {
  create: Test_resultsDocAccessFields_testType_Create
  read: Test_resultsDocAccessFields_testType_Read
  update: Test_resultsDocAccessFields_testType_Update
  delete: Test_resultsDocAccessFields_testType_Delete
}

type Test_resultsDocAccessFields_testType_Create {
  permission: Boolean!
}

type Test_resultsDocAccessFields_testType_Read {
  permission: Boolean!
}

type Test_resultsDocAccessFields_testType_Update {
  permission: Boolean!
}

type Test_resultsDocAccessFields_testType_Delete {
  permission: Boolean!
}

type Test_resultsDocAccessFields_resultData {
  create: Test_resultsDocAccessFields_resultData_Create
  read: Test_resultsDocAccessFields_resultData_Read
  update: Test_resultsDocAccessFields_resultData_Update
  delete: Test_resultsDocAccessFields_resultData_Delete
}

type Test_resultsDocAccessFields_resultData_Create {
  permission: Boolean!
}

type Test_resultsDocAccessFields_resultData_Read {
  permission: Boolean!
}

type Test_resultsDocAccessFields_resultData_Update {
  permission: Boolean!
}

type Test_resultsDocAccessFields_resultData_Delete {
  permission: Boolean!
}

type Test_resultsDocAccessFields_date {
  create: Test_resultsDocAccessFields_date_Create
  read: Test_resultsDocAccessFields_date_Read
  update: Test_resultsDocAccessFields_date_Update
  delete: Test_resultsDocAccessFields_date_Delete
}

type Test_resultsDocAccessFields_date_Create {
  permission: Boolean!
}

type Test_resultsDocAccessFields_date_Read {
  permission: Boolean!
}

type Test_resultsDocAccessFields_date_Update {
  permission: Boolean!
}

type Test_resultsDocAccessFields_date_Delete {
  permission: Boolean!
}

type Test_resultsDocAccessFields_notes {
  create: Test_resultsDocAccessFields_notes_Create
  read: Test_resultsDocAccessFields_notes_Read
  update: Test_resultsDocAccessFields_notes_Update
  delete: Test_resultsDocAccessFields_notes_Delete
}

type Test_resultsDocAccessFields_notes_Create {
  permission: Boolean!
}

type Test_resultsDocAccessFields_notes_Read {
  permission: Boolean!
}

type Test_resultsDocAccessFields_notes_Update {
  permission: Boolean!
}

type Test_resultsDocAccessFields_notes_Delete {
  permission: Boolean!
}

type Test_resultsDocAccessFields_updatedAt {
  create: Test_resultsDocAccessFields_updatedAt_Create
  read: Test_resultsDocAccessFields_updatedAt_Read
  update: Test_resultsDocAccessFields_updatedAt_Update
  delete: Test_resultsDocAccessFields_updatedAt_Delete
}

type Test_resultsDocAccessFields_updatedAt_Create {
  permission: Boolean!
}

type Test_resultsDocAccessFields_updatedAt_Read {
  permission: Boolean!
}

type Test_resultsDocAccessFields_updatedAt_Update {
  permission: Boolean!
}

type Test_resultsDocAccessFields_updatedAt_Delete {
  permission: Boolean!
}

type Test_resultsDocAccessFields_createdAt {
  create: Test_resultsDocAccessFields_createdAt_Create
  read: Test_resultsDocAccessFields_createdAt_Read
  update: Test_resultsDocAccessFields_createdAt_Update
  delete: Test_resultsDocAccessFields_createdAt_Delete
}

type Test_resultsDocAccessFields_createdAt_Create {
  permission: Boolean!
}

type Test_resultsDocAccessFields_createdAt_Read {
  permission: Boolean!
}

type Test_resultsDocAccessFields_createdAt_Update {
  permission: Boolean!
}

type Test_resultsDocAccessFields_createdAt_Delete {
  permission: Boolean!
}

type Test_resultsCreateDocAccess {
  permission: Boolean!
  where: JSONObject
}

type Test_resultsReadDocAccess {
  permission: Boolean!
  where: JSONObject
}

type Test_resultsUpdateDocAccess {
  permission: Boolean!
  where: JSONObject
}

type Test_resultsDeleteDocAccess {
  permission: Boolean!
  where: JSONObject
}

type C_sport_tests {
  docs: [C_sport_test]
  hasNextPage: Boolean
  hasPrevPage: Boolean
  limit: Int
  nextPage: Int
  offset: Int
  page: Int
  pagingCounter: Int
  prevPage: Int
  totalDocs: Int
  totalPages: Int
}

input C_sport_test_where {
  name: C_sport_test_name_operator
  short_name: C_sport_test_short_name_operator
  description: C_sport_test_description_operator
  updatedAt: C_sport_test_updatedAt_operator
  createdAt: C_sport_test_createdAt_operator
  id: C_sport_test_id_operator
  AND: [C_sport_test_where_and]
  OR: [C_sport_test_where_or]
}

input C_sport_test_name_operator {
  equals: String
  not_equals: String
  like: String
  contains: String
  in: [String]
  not_in: [String]
  all: [String]
}

input C_sport_test_short_name_operator {
  equals: String
  not_equals: String
  like: String
  contains: String
  in: [String]
  not_in: [String]
  all: [String]
}

input C_sport_test_description_operator {
  equals: String
  not_equals: String
  like: String
  contains: String
  exists: Boolean
}

input C_sport_test_updatedAt_operator {
  equals: DateTime
  not_equals: DateTime
  greater_than_equal: DateTime
  greater_than: DateTime
  less_than_equal: DateTime
  less_than: DateTime
  like: DateTime
  exists: Boolean
}

input C_sport_test_createdAt_operator {
  equals: DateTime
  not_equals: DateTime
  greater_than_equal: DateTime
  greater_than: DateTime
  less_than_equal: DateTime
  less_than: DateTime
  like: DateTime
  exists: Boolean
}

input C_sport_test_id_operator {
  equals: String
  not_equals: String
  like: String
  contains: String
  in: [String]
  not_in: [String]
  all: [String]
  exists: Boolean
}

input C_sport_test_where_and {
  name: C_sport_test_name_operator
  short_name: C_sport_test_short_name_operator
  description: C_sport_test_description_operator
  updatedAt: C_sport_test_updatedAt_operator
  createdAt: C_sport_test_createdAt_operator
  id: C_sport_test_id_operator
  AND: [C_sport_test_where_and]
  OR: [C_sport_test_where_or]
}

input C_sport_test_where_or {
  name: C_sport_test_name_operator
  short_name: C_sport_test_short_name_operator
  description: C_sport_test_description_operator
  updatedAt: C_sport_test_updatedAt_operator
  createdAt: C_sport_test_createdAt_operator
  id: C_sport_test_id_operator
  AND: [C_sport_test_where_and]
  OR: [C_sport_test_where_or]
}

type countC_sport_tests {
  totalDocs: Int
}

type c_sport_testDocAccess {
  fields: C_sport_testDocAccessFields
  create: C_sport_testCreateDocAccess
  read: C_sport_testReadDocAccess
  update: C_sport_testUpdateDocAccess
  delete: C_sport_testDeleteDocAccess
}

type C_sport_testDocAccessFields {
  name: C_sport_testDocAccessFields_name
  short_name: C_sport_testDocAccessFields_short_name
  description: C_sport_testDocAccessFields_description
  updatedAt: C_sport_testDocAccessFields_updatedAt
  createdAt: C_sport_testDocAccessFields_createdAt
}

type C_sport_testDocAccessFields_name {
  create: C_sport_testDocAccessFields_name_Create
  read: C_sport_testDocAccessFields_name_Read
  update: C_sport_testDocAccessFields_name_Update
  delete: C_sport_testDocAccessFields_name_Delete
}

type C_sport_testDocAccessFields_name_Create {
  permission: Boolean!
}

type C_sport_testDocAccessFields_name_Read {
  permission: Boolean!
}

type C_sport_testDocAccessFields_name_Update {
  permission: Boolean!
}

type C_sport_testDocAccessFields_name_Delete {
  permission: Boolean!
}

type C_sport_testDocAccessFields_short_name {
  create: C_sport_testDocAccessFields_short_name_Create
  read: C_sport_testDocAccessFields_short_name_Read
  update: C_sport_testDocAccessFields_short_name_Update
  delete: C_sport_testDocAccessFields_short_name_Delete
}

type C_sport_testDocAccessFields_short_name_Create {
  permission: Boolean!
}

type C_sport_testDocAccessFields_short_name_Read {
  permission: Boolean!
}

type C_sport_testDocAccessFields_short_name_Update {
  permission: Boolean!
}

type C_sport_testDocAccessFields_short_name_Delete {
  permission: Boolean!
}

type C_sport_testDocAccessFields_description {
  create: C_sport_testDocAccessFields_description_Create
  read: C_sport_testDocAccessFields_description_Read
  update: C_sport_testDocAccessFields_description_Update
  delete: C_sport_testDocAccessFields_description_Delete
}

type C_sport_testDocAccessFields_description_Create {
  permission: Boolean!
}

type C_sport_testDocAccessFields_description_Read {
  permission: Boolean!
}

type C_sport_testDocAccessFields_description_Update {
  permission: Boolean!
}

type C_sport_testDocAccessFields_description_Delete {
  permission: Boolean!
}

type C_sport_testDocAccessFields_updatedAt {
  create: C_sport_testDocAccessFields_updatedAt_Create
  read: C_sport_testDocAccessFields_updatedAt_Read
  update: C_sport_testDocAccessFields_updatedAt_Update
  delete: C_sport_testDocAccessFields_updatedAt_Delete
}

type C_sport_testDocAccessFields_updatedAt_Create {
  permission: Boolean!
}

type C_sport_testDocAccessFields_updatedAt_Read {
  permission: Boolean!
}

type C_sport_testDocAccessFields_updatedAt_Update {
  permission: Boolean!
}

type C_sport_testDocAccessFields_updatedAt_Delete {
  permission: Boolean!
}

type C_sport_testDocAccessFields_createdAt {
  create: C_sport_testDocAccessFields_createdAt_Create
  read: C_sport_testDocAccessFields_createdAt_Read
  update: C_sport_testDocAccessFields_createdAt_Update
  delete: C_sport_testDocAccessFields_createdAt_Delete
}

type C_sport_testDocAccessFields_createdAt_Create {
  permission: Boolean!
}

type C_sport_testDocAccessFields_createdAt_Read {
  permission: Boolean!
}

type C_sport_testDocAccessFields_createdAt_Update {
  permission: Boolean!
}

type C_sport_testDocAccessFields_createdAt_Delete {
  permission: Boolean!
}

type C_sport_testCreateDocAccess {
  permission: Boolean!
  where: JSONObject
}

type C_sport_testReadDocAccess {
  permission: Boolean!
  where: JSONObject
}

type C_sport_testUpdateDocAccess {
  permission: Boolean!
  where: JSONObject
}

type C_sport_testDeleteDocAccess {
  permission: Boolean!
  where: JSONObject
}

type PayloadPreference {
  id: String
  user: PayloadPreference_User_Relationship!
  key: String
  value: JSON
  updatedAt: DateTime
  createdAt: DateTime
}

type PayloadPreference_User_Relationship {
  relationTo: PayloadPreference_User_RelationTo
  value: PayloadPreference_User
}

enum PayloadPreference_User_RelationTo {
  users
}

union PayloadPreference_User = User

type PayloadPreferences {
  docs: [PayloadPreference]
  hasNextPage: Boolean
  hasPrevPage: Boolean
  limit: Int
  nextPage: Int
  offset: Int
  page: Int
  pagingCounter: Int
  prevPage: Int
  totalDocs: Int
  totalPages: Int
}

input PayloadPreference_where {
  user: PayloadPreference_user_Relation
  key: PayloadPreference_key_operator
  value: PayloadPreference_value_operator
  updatedAt: PayloadPreference_updatedAt_operator
  createdAt: PayloadPreference_createdAt_operator
  id: PayloadPreference_id_operator
  AND: [PayloadPreference_where_and]
  OR: [PayloadPreference_where_or]
}

input PayloadPreference_user_Relation {
  relationTo: PayloadPreference_user_Relation_RelationTo
  value: JSON
}

enum PayloadPreference_user_Relation_RelationTo {
  users
}

input PayloadPreference_key_operator {
  equals: String
  not_equals: String
  like: String
  contains: String
  in: [String]
  not_in: [String]
  all: [String]
  exists: Boolean
}

input PayloadPreference_value_operator {
  equals: JSON
  not_equals: JSON
  like: JSON
  contains: JSON
  within: JSON
  intersects: JSON
  exists: Boolean
}

input PayloadPreference_updatedAt_operator {
  equals: DateTime
  not_equals: DateTime
  greater_than_equal: DateTime
  greater_than: DateTime
  less_than_equal: DateTime
  less_than: DateTime
  like: DateTime
  exists: Boolean
}

input PayloadPreference_createdAt_operator {
  equals: DateTime
  not_equals: DateTime
  greater_than_equal: DateTime
  greater_than: DateTime
  less_than_equal: DateTime
  less_than: DateTime
  like: DateTime
  exists: Boolean
}

input PayloadPreference_id_operator {
  equals: String
  not_equals: String
  like: String
  contains: String
  in: [String]
  not_in: [String]
  all: [String]
  exists: Boolean
}

input PayloadPreference_where_and {
  user: PayloadPreference_user_Relation
  key: PayloadPreference_key_operator
  value: PayloadPreference_value_operator
  updatedAt: PayloadPreference_updatedAt_operator
  createdAt: PayloadPreference_createdAt_operator
  id: PayloadPreference_id_operator
  AND: [PayloadPreference_where_and]
  OR: [PayloadPreference_where_or]
}

input PayloadPreference_where_or {
  user: PayloadPreference_user_Relation
  key: PayloadPreference_key_operator
  value: PayloadPreference_value_operator
  updatedAt: PayloadPreference_updatedAt_operator
  createdAt: PayloadPreference_createdAt_operator
  id: PayloadPreference_id_operator
  AND: [PayloadPreference_where_and]
  OR: [PayloadPreference_where_or]
}

type countPayloadPreferences {
  totalDocs: Int
}

type payload_preferencesDocAccess {
  fields: PayloadPreferencesDocAccessFields
  create: PayloadPreferencesCreateDocAccess
  read: PayloadPreferencesReadDocAccess
  update: PayloadPreferencesUpdateDocAccess
  delete: PayloadPreferencesDeleteDocAccess
}

type PayloadPreferencesDocAccessFields {
  user: PayloadPreferencesDocAccessFields_user
  key: PayloadPreferencesDocAccessFields_key
  value: PayloadPreferencesDocAccessFields_value
  updatedAt: PayloadPreferencesDocAccessFields_updatedAt
  createdAt: PayloadPreferencesDocAccessFields_createdAt
}

type PayloadPreferencesDocAccessFields_user {
  create: PayloadPreferencesDocAccessFields_user_Create
  read: PayloadPreferencesDocAccessFields_user_Read
  update: PayloadPreferencesDocAccessFields_user_Update
  delete: PayloadPreferencesDocAccessFields_user_Delete
}

type PayloadPreferencesDocAccessFields_user_Create {
  permission: Boolean!
}

type PayloadPreferencesDocAccessFields_user_Read {
  permission: Boolean!
}

type PayloadPreferencesDocAccessFields_user_Update {
  permission: Boolean!
}

type PayloadPreferencesDocAccessFields_user_Delete {
  permission: Boolean!
}

type PayloadPreferencesDocAccessFields_key {
  create: PayloadPreferencesDocAccessFields_key_Create
  read: PayloadPreferencesDocAccessFields_key_Read
  update: PayloadPreferencesDocAccessFields_key_Update
  delete: PayloadPreferencesDocAccessFields_key_Delete
}

type PayloadPreferencesDocAccessFields_key_Create {
  permission: Boolean!
}

type PayloadPreferencesDocAccessFields_key_Read {
  permission: Boolean!
}

type PayloadPreferencesDocAccessFields_key_Update {
  permission: Boolean!
}

type PayloadPreferencesDocAccessFields_key_Delete {
  permission: Boolean!
}

type PayloadPreferencesDocAccessFields_value {
  create: PayloadPreferencesDocAccessFields_value_Create
  read: PayloadPreferencesDocAccessFields_value_Read
  update: PayloadPreferencesDocAccessFields_value_Update
  delete: PayloadPreferencesDocAccessFields_value_Delete
}

type PayloadPreferencesDocAccessFields_value_Create {
  permission: Boolean!
}

type PayloadPreferencesDocAccessFields_value_Read {
  permission: Boolean!
}

type PayloadPreferencesDocAccessFields_value_Update {
  permission: Boolean!
}

type PayloadPreferencesDocAccessFields_value_Delete {
  permission: Boolean!
}

type PayloadPreferencesDocAccessFields_updatedAt {
  create: PayloadPreferencesDocAccessFields_updatedAt_Create
  read: PayloadPreferencesDocAccessFields_updatedAt_Read
  update: PayloadPreferencesDocAccessFields_updatedAt_Update
  delete: PayloadPreferencesDocAccessFields_updatedAt_Delete
}

type PayloadPreferencesDocAccessFields_updatedAt_Create {
  permission: Boolean!
}

type PayloadPreferencesDocAccessFields_updatedAt_Read {
  permission: Boolean!
}

type PayloadPreferencesDocAccessFields_updatedAt_Update {
  permission: Boolean!
}

type PayloadPreferencesDocAccessFields_updatedAt_Delete {
  permission: Boolean!
}

type PayloadPreferencesDocAccessFields_createdAt {
  create: PayloadPreferencesDocAccessFields_createdAt_Create
  read: PayloadPreferencesDocAccessFields_createdAt_Read
  update: PayloadPreferencesDocAccessFields_createdAt_Update
  delete: PayloadPreferencesDocAccessFields_createdAt_Delete
}

type PayloadPreferencesDocAccessFields_createdAt_Create {
  permission: Boolean!
}

type PayloadPreferencesDocAccessFields_createdAt_Read {
  permission: Boolean!
}

type PayloadPreferencesDocAccessFields_createdAt_Update {
  permission: Boolean!
}

type PayloadPreferencesDocAccessFields_createdAt_Delete {
  permission: Boolean!
}

type PayloadPreferencesCreateDocAccess {
  permission: Boolean!
  where: JSONObject
}

type PayloadPreferencesReadDocAccess {
  permission: Boolean!
  where: JSONObject
}

type PayloadPreferencesUpdateDocAccess {
  permission: Boolean!
  where: JSONObject
}

type PayloadPreferencesDeleteDocAccess {
  permission: Boolean!
  where: JSONObject
}

type Access {
  canAccessAdmin: Boolean!
  media: mediaAccess
  users: usersAccess
  c_sport: c_sportAccess
  c_sport_club: c_sport_clubAccess
  u_athlete: u_athleteAccess
  u_coach: u_coachAccess
  test_results: test_resultsAccess
  c_sport_test: c_sport_testAccess
  payload_preferences: payload_preferencesAccess
}

type mediaAccess {
  fields: MediaFields
  create: MediaCreateAccess
  read: MediaReadAccess
  update: MediaUpdateAccess
  delete: MediaDeleteAccess
}

type MediaFields {
  title: MediaFields_title
  date: MediaFields_date
  user: MediaFields_user
  alt: MediaFields_alt
  caption: MediaFields_caption
  updatedAt: MediaFields_updatedAt
  createdAt: MediaFields_createdAt
  url: MediaFields_url
  filename: MediaFields_filename
  mimeType: MediaFields_mimeType
  filesize: MediaFields_filesize
  width: MediaFields_width
  height: MediaFields_height
  focalX: MediaFields_focalX
  focalY: MediaFields_focalY
}

type MediaFields_title {
  create: MediaFields_title_Create
  read: MediaFields_title_Read
  update: MediaFields_title_Update
  delete: MediaFields_title_Delete
}

type MediaFields_title_Create {
  permission: Boolean!
}

type MediaFields_title_Read {
  permission: Boolean!
}

type MediaFields_title_Update {
  permission: Boolean!
}

type MediaFields_title_Delete {
  permission: Boolean!
}

type MediaFields_date {
  create: MediaFields_date_Create
  read: MediaFields_date_Read
  update: MediaFields_date_Update
  delete: MediaFields_date_Delete
}

type MediaFields_date_Create {
  permission: Boolean!
}

type MediaFields_date_Read {
  permission: Boolean!
}

type MediaFields_date_Update {
  permission: Boolean!
}

type MediaFields_date_Delete {
  permission: Boolean!
}

type MediaFields_user {
  create: MediaFields_user_Create
  read: MediaFields_user_Read
  update: MediaFields_user_Update
  delete: MediaFields_user_Delete
}

type MediaFields_user_Create {
  permission: Boolean!
}

type MediaFields_user_Read {
  permission: Boolean!
}

type MediaFields_user_Update {
  permission: Boolean!
}

type MediaFields_user_Delete {
  permission: Boolean!
}

type MediaFields_alt {
  create: MediaFields_alt_Create
  read: MediaFields_alt_Read
  update: MediaFields_alt_Update
  delete: MediaFields_alt_Delete
}

type MediaFields_alt_Create {
  permission: Boolean!
}

type MediaFields_alt_Read {
  permission: Boolean!
}

type MediaFields_alt_Update {
  permission: Boolean!
}

type MediaFields_alt_Delete {
  permission: Boolean!
}

type MediaFields_caption {
  create: MediaFields_caption_Create
  read: MediaFields_caption_Read
  update: MediaFields_caption_Update
  delete: MediaFields_caption_Delete
}

type MediaFields_caption_Create {
  permission: Boolean!
}

type MediaFields_caption_Read {
  permission: Boolean!
}

type MediaFields_caption_Update {
  permission: Boolean!
}

type MediaFields_caption_Delete {
  permission: Boolean!
}

type MediaFields_updatedAt {
  create: MediaFields_updatedAt_Create
  read: MediaFields_updatedAt_Read
  update: MediaFields_updatedAt_Update
  delete: MediaFields_updatedAt_Delete
}

type MediaFields_updatedAt_Create {
  permission: Boolean!
}

type MediaFields_updatedAt_Read {
  permission: Boolean!
}

type MediaFields_updatedAt_Update {
  permission: Boolean!
}

type MediaFields_updatedAt_Delete {
  permission: Boolean!
}

type MediaFields_createdAt {
  create: MediaFields_createdAt_Create
  read: MediaFields_createdAt_Read
  update: MediaFields_createdAt_Update
  delete: MediaFields_createdAt_Delete
}

type MediaFields_createdAt_Create {
  permission: Boolean!
}

type MediaFields_createdAt_Read {
  permission: Boolean!
}

type MediaFields_createdAt_Update {
  permission: Boolean!
}

type MediaFields_createdAt_Delete {
  permission: Boolean!
}

type MediaFields_url {
  create: MediaFields_url_Create
  read: MediaFields_url_Read
  update: MediaFields_url_Update
  delete: MediaFields_url_Delete
}

type MediaFields_url_Create {
  permission: Boolean!
}

type MediaFields_url_Read {
  permission: Boolean!
}

type MediaFields_url_Update {
  permission: Boolean!
}

type MediaFields_url_Delete {
  permission: Boolean!
}

type MediaFields_filename {
  create: MediaFields_filename_Create
  read: MediaFields_filename_Read
  update: MediaFields_filename_Update
  delete: MediaFields_filename_Delete
}

type MediaFields_filename_Create {
  permission: Boolean!
}

type MediaFields_filename_Read {
  permission: Boolean!
}

type MediaFields_filename_Update {
  permission: Boolean!
}

type MediaFields_filename_Delete {
  permission: Boolean!
}

type MediaFields_mimeType {
  create: MediaFields_mimeType_Create
  read: MediaFields_mimeType_Read
  update: MediaFields_mimeType_Update
  delete: MediaFields_mimeType_Delete
}

type MediaFields_mimeType_Create {
  permission: Boolean!
}

type MediaFields_mimeType_Read {
  permission: Boolean!
}

type MediaFields_mimeType_Update {
  permission: Boolean!
}

type MediaFields_mimeType_Delete {
  permission: Boolean!
}

type MediaFields_filesize {
  create: MediaFields_filesize_Create
  read: MediaFields_filesize_Read
  update: MediaFields_filesize_Update
  delete: MediaFields_filesize_Delete
}

type MediaFields_filesize_Create {
  permission: Boolean!
}

type MediaFields_filesize_Read {
  permission: Boolean!
}

type MediaFields_filesize_Update {
  permission: Boolean!
}

type MediaFields_filesize_Delete {
  permission: Boolean!
}

type MediaFields_width {
  create: MediaFields_width_Create
  read: MediaFields_width_Read
  update: MediaFields_width_Update
  delete: MediaFields_width_Delete
}

type MediaFields_width_Create {
  permission: Boolean!
}

type MediaFields_width_Read {
  permission: Boolean!
}

type MediaFields_width_Update {
  permission: Boolean!
}

type MediaFields_width_Delete {
  permission: Boolean!
}

type MediaFields_height {
  create: MediaFields_height_Create
  read: MediaFields_height_Read
  update: MediaFields_height_Update
  delete: MediaFields_height_Delete
}

type MediaFields_height_Create {
  permission: Boolean!
}

type MediaFields_height_Read {
  permission: Boolean!
}

type MediaFields_height_Update {
  permission: Boolean!
}

type MediaFields_height_Delete {
  permission: Boolean!
}

type MediaFields_focalX {
  create: MediaFields_focalX_Create
  read: MediaFields_focalX_Read
  update: MediaFields_focalX_Update
  delete: MediaFields_focalX_Delete
}

type MediaFields_focalX_Create {
  permission: Boolean!
}

type MediaFields_focalX_Read {
  permission: Boolean!
}

type MediaFields_focalX_Update {
  permission: Boolean!
}

type MediaFields_focalX_Delete {
  permission: Boolean!
}

type MediaFields_focalY {
  create: MediaFields_focalY_Create
  read: MediaFields_focalY_Read
  update: MediaFields_focalY_Update
  delete: MediaFields_focalY_Delete
}

type MediaFields_focalY_Create {
  permission: Boolean!
}

type MediaFields_focalY_Read {
  permission: Boolean!
}

type MediaFields_focalY_Update {
  permission: Boolean!
}

type MediaFields_focalY_Delete {
  permission: Boolean!
}

type MediaCreateAccess {
  permission: Boolean!
  where: JSONObject
}

type MediaReadAccess {
  permission: Boolean!
  where: JSONObject
}

type MediaUpdateAccess {
  permission: Boolean!
  where: JSONObject
}

type MediaDeleteAccess {
  permission: Boolean!
  where: JSONObject
}

type usersAccess {
  fields: UsersFields
  create: UsersCreateAccess
  read: UsersReadAccess
  update: UsersUpdateAccess
  delete: UsersDeleteAccess
  unlock: UsersUnlockAccess
}

type UsersFields {
  name: UsersFields_name
  roles: UsersFields_roles
  updatedAt: UsersFields_updatedAt
  createdAt: UsersFields_createdAt
  email: UsersFields_email
  password: UsersFields_password
}

type UsersFields_name {
  create: UsersFields_name_Create
  read: UsersFields_name_Read
  update: UsersFields_name_Update
  delete: UsersFields_name_Delete
}

type UsersFields_name_Create {
  permission: Boolean!
}

type UsersFields_name_Read {
  permission: Boolean!
}

type UsersFields_name_Update {
  permission: Boolean!
}

type UsersFields_name_Delete {
  permission: Boolean!
}

type UsersFields_roles {
  create: UsersFields_roles_Create
  read: UsersFields_roles_Read
  update: UsersFields_roles_Update
  delete: UsersFields_roles_Delete
}

type UsersFields_roles_Create {
  permission: Boolean!
}

type UsersFields_roles_Read {
  permission: Boolean!
}

type UsersFields_roles_Update {
  permission: Boolean!
}

type UsersFields_roles_Delete {
  permission: Boolean!
}

type UsersFields_updatedAt {
  create: UsersFields_updatedAt_Create
  read: UsersFields_updatedAt_Read
  update: UsersFields_updatedAt_Update
  delete: UsersFields_updatedAt_Delete
}

type UsersFields_updatedAt_Create {
  permission: Boolean!
}

type UsersFields_updatedAt_Read {
  permission: Boolean!
}

type UsersFields_updatedAt_Update {
  permission: Boolean!
}

type UsersFields_updatedAt_Delete {
  permission: Boolean!
}

type UsersFields_createdAt {
  create: UsersFields_createdAt_Create
  read: UsersFields_createdAt_Read
  update: UsersFields_createdAt_Update
  delete: UsersFields_createdAt_Delete
}

type UsersFields_createdAt_Create {
  permission: Boolean!
}

type UsersFields_createdAt_Read {
  permission: Boolean!
}

type UsersFields_createdAt_Update {
  permission: Boolean!
}

type UsersFields_createdAt_Delete {
  permission: Boolean!
}

type UsersFields_email {
  create: UsersFields_email_Create
  read: UsersFields_email_Read
  update: UsersFields_email_Update
  delete: UsersFields_email_Delete
}

type UsersFields_email_Create {
  permission: Boolean!
}

type UsersFields_email_Read {
  permission: Boolean!
}

type UsersFields_email_Update {
  permission: Boolean!
}

type UsersFields_email_Delete {
  permission: Boolean!
}

type UsersFields_password {
  create: UsersFields_password_Create
  read: UsersFields_password_Read
  update: UsersFields_password_Update
  delete: UsersFields_password_Delete
}

type UsersFields_password_Create {
  permission: Boolean!
}

type UsersFields_password_Read {
  permission: Boolean!
}

type UsersFields_password_Update {
  permission: Boolean!
}

type UsersFields_password_Delete {
  permission: Boolean!
}

type UsersCreateAccess {
  permission: Boolean!
  where: JSONObject
}

type UsersReadAccess {
  permission: Boolean!
  where: JSONObject
}

type UsersUpdateAccess {
  permission: Boolean!
  where: JSONObject
}

type UsersDeleteAccess {
  permission: Boolean!
  where: JSONObject
}

type UsersUnlockAccess {
  permission: Boolean!
  where: JSONObject
}

type c_sportAccess {
  fields: C_sportFields
  create: C_sportCreateAccess
  read: C_sportReadAccess
  update: C_sportUpdateAccess
  delete: C_sportDeleteAccess
}

type C_sportFields {
  name: C_sportFields_name
  info: C_sportFields_info
  updatedAt: C_sportFields_updatedAt
  createdAt: C_sportFields_createdAt
}

type C_sportFields_name {
  create: C_sportFields_name_Create
  read: C_sportFields_name_Read
  update: C_sportFields_name_Update
  delete: C_sportFields_name_Delete
}

type C_sportFields_name_Create {
  permission: Boolean!
}

type C_sportFields_name_Read {
  permission: Boolean!
}

type C_sportFields_name_Update {
  permission: Boolean!
}

type C_sportFields_name_Delete {
  permission: Boolean!
}

type C_sportFields_info {
  create: C_sportFields_info_Create
  read: C_sportFields_info_Read
  update: C_sportFields_info_Update
  delete: C_sportFields_info_Delete
}

type C_sportFields_info_Create {
  permission: Boolean!
}

type C_sportFields_info_Read {
  permission: Boolean!
}

type C_sportFields_info_Update {
  permission: Boolean!
}

type C_sportFields_info_Delete {
  permission: Boolean!
}

type C_sportFields_updatedAt {
  create: C_sportFields_updatedAt_Create
  read: C_sportFields_updatedAt_Read
  update: C_sportFields_updatedAt_Update
  delete: C_sportFields_updatedAt_Delete
}

type C_sportFields_updatedAt_Create {
  permission: Boolean!
}

type C_sportFields_updatedAt_Read {
  permission: Boolean!
}

type C_sportFields_updatedAt_Update {
  permission: Boolean!
}

type C_sportFields_updatedAt_Delete {
  permission: Boolean!
}

type C_sportFields_createdAt {
  create: C_sportFields_createdAt_Create
  read: C_sportFields_createdAt_Read
  update: C_sportFields_createdAt_Update
  delete: C_sportFields_createdAt_Delete
}

type C_sportFields_createdAt_Create {
  permission: Boolean!
}

type C_sportFields_createdAt_Read {
  permission: Boolean!
}

type C_sportFields_createdAt_Update {
  permission: Boolean!
}

type C_sportFields_createdAt_Delete {
  permission: Boolean!
}

type C_sportCreateAccess {
  permission: Boolean!
  where: JSONObject
}

type C_sportReadAccess {
  permission: Boolean!
  where: JSONObject
}

type C_sportUpdateAccess {
  permission: Boolean!
  where: JSONObject
}

type C_sportDeleteAccess {
  permission: Boolean!
  where: JSONObject
}

type c_sport_clubAccess {
  fields: C_sport_clubFields
  create: C_sport_clubCreateAccess
  read: C_sport_clubReadAccess
  update: C_sport_clubUpdateAccess
  delete: C_sport_clubDeleteAccess
}

type C_sport_clubFields {
  name: C_sport_clubFields_name
  short_name: C_sport_clubFields_short_name
  sport: C_sport_clubFields_sport
  updatedAt: C_sport_clubFields_updatedAt
  createdAt: C_sport_clubFields_createdAt
}

type C_sport_clubFields_name {
  create: C_sport_clubFields_name_Create
  read: C_sport_clubFields_name_Read
  update: C_sport_clubFields_name_Update
  delete: C_sport_clubFields_name_Delete
}

type C_sport_clubFields_name_Create {
  permission: Boolean!
}

type C_sport_clubFields_name_Read {
  permission: Boolean!
}

type C_sport_clubFields_name_Update {
  permission: Boolean!
}

type C_sport_clubFields_name_Delete {
  permission: Boolean!
}

type C_sport_clubFields_short_name {
  create: C_sport_clubFields_short_name_Create
  read: C_sport_clubFields_short_name_Read
  update: C_sport_clubFields_short_name_Update
  delete: C_sport_clubFields_short_name_Delete
}

type C_sport_clubFields_short_name_Create {
  permission: Boolean!
}

type C_sport_clubFields_short_name_Read {
  permission: Boolean!
}

type C_sport_clubFields_short_name_Update {
  permission: Boolean!
}

type C_sport_clubFields_short_name_Delete {
  permission: Boolean!
}

type C_sport_clubFields_sport {
  create: C_sport_clubFields_sport_Create
  read: C_sport_clubFields_sport_Read
  update: C_sport_clubFields_sport_Update
  delete: C_sport_clubFields_sport_Delete
}

type C_sport_clubFields_sport_Create {
  permission: Boolean!
}

type C_sport_clubFields_sport_Read {
  permission: Boolean!
}

type C_sport_clubFields_sport_Update {
  permission: Boolean!
}

type C_sport_clubFields_sport_Delete {
  permission: Boolean!
}

type C_sport_clubFields_updatedAt {
  create: C_sport_clubFields_updatedAt_Create
  read: C_sport_clubFields_updatedAt_Read
  update: C_sport_clubFields_updatedAt_Update
  delete: C_sport_clubFields_updatedAt_Delete
}

type C_sport_clubFields_updatedAt_Create {
  permission: Boolean!
}

type C_sport_clubFields_updatedAt_Read {
  permission: Boolean!
}

type C_sport_clubFields_updatedAt_Update {
  permission: Boolean!
}

type C_sport_clubFields_updatedAt_Delete {
  permission: Boolean!
}

type C_sport_clubFields_createdAt {
  create: C_sport_clubFields_createdAt_Create
  read: C_sport_clubFields_createdAt_Read
  update: C_sport_clubFields_createdAt_Update
  delete: C_sport_clubFields_createdAt_Delete
}

type C_sport_clubFields_createdAt_Create {
  permission: Boolean!
}

type C_sport_clubFields_createdAt_Read {
  permission: Boolean!
}

type C_sport_clubFields_createdAt_Update {
  permission: Boolean!
}

type C_sport_clubFields_createdAt_Delete {
  permission: Boolean!
}

type C_sport_clubCreateAccess {
  permission: Boolean!
  where: JSONObject
}

type C_sport_clubReadAccess {
  permission: Boolean!
  where: JSONObject
}

type C_sport_clubUpdateAccess {
  permission: Boolean!
  where: JSONObject
}

type C_sport_clubDeleteAccess {
  permission: Boolean!
  where: JSONObject
}

type u_athleteAccess {
  fields: U_athleteFields
  create: U_athleteCreateAccess
  read: U_athleteReadAccess
  update: U_athleteUpdateAccess
  delete: U_athleteDeleteAccess
}

type U_athleteFields {
  user: U_athleteFields_user
  name: U_athleteFields_name
  birth_date: U_athleteFields_birth_date
  gender: U_athleteFields_gender
  sport: U_athleteFields_sport
  club: U_athleteFields_club
  updatedAt: U_athleteFields_updatedAt
  createdAt: U_athleteFields_createdAt
}

type U_athleteFields_user {
  create: U_athleteFields_user_Create
  read: U_athleteFields_user_Read
  update: U_athleteFields_user_Update
  delete: U_athleteFields_user_Delete
}

type U_athleteFields_user_Create {
  permission: Boolean!
}

type U_athleteFields_user_Read {
  permission: Boolean!
}

type U_athleteFields_user_Update {
  permission: Boolean!
}

type U_athleteFields_user_Delete {
  permission: Boolean!
}

type U_athleteFields_name {
  create: U_athleteFields_name_Create
  read: U_athleteFields_name_Read
  update: U_athleteFields_name_Update
  delete: U_athleteFields_name_Delete
}

type U_athleteFields_name_Create {
  permission: Boolean!
}

type U_athleteFields_name_Read {
  permission: Boolean!
}

type U_athleteFields_name_Update {
  permission: Boolean!
}

type U_athleteFields_name_Delete {
  permission: Boolean!
}

type U_athleteFields_birth_date {
  create: U_athleteFields_birth_date_Create
  read: U_athleteFields_birth_date_Read
  update: U_athleteFields_birth_date_Update
  delete: U_athleteFields_birth_date_Delete
}

type U_athleteFields_birth_date_Create {
  permission: Boolean!
}

type U_athleteFields_birth_date_Read {
  permission: Boolean!
}

type U_athleteFields_birth_date_Update {
  permission: Boolean!
}

type U_athleteFields_birth_date_Delete {
  permission: Boolean!
}

type U_athleteFields_gender {
  create: U_athleteFields_gender_Create
  read: U_athleteFields_gender_Read
  update: U_athleteFields_gender_Update
  delete: U_athleteFields_gender_Delete
}

type U_athleteFields_gender_Create {
  permission: Boolean!
}

type U_athleteFields_gender_Read {
  permission: Boolean!
}

type U_athleteFields_gender_Update {
  permission: Boolean!
}

type U_athleteFields_gender_Delete {
  permission: Boolean!
}

type U_athleteFields_sport {
  create: U_athleteFields_sport_Create
  read: U_athleteFields_sport_Read
  update: U_athleteFields_sport_Update
  delete: U_athleteFields_sport_Delete
}

type U_athleteFields_sport_Create {
  permission: Boolean!
}

type U_athleteFields_sport_Read {
  permission: Boolean!
}

type U_athleteFields_sport_Update {
  permission: Boolean!
}

type U_athleteFields_sport_Delete {
  permission: Boolean!
}

type U_athleteFields_club {
  create: U_athleteFields_club_Create
  read: U_athleteFields_club_Read
  update: U_athleteFields_club_Update
  delete: U_athleteFields_club_Delete
}

type U_athleteFields_club_Create {
  permission: Boolean!
}

type U_athleteFields_club_Read {
  permission: Boolean!
}

type U_athleteFields_club_Update {
  permission: Boolean!
}

type U_athleteFields_club_Delete {
  permission: Boolean!
}

type U_athleteFields_updatedAt {
  create: U_athleteFields_updatedAt_Create
  read: U_athleteFields_updatedAt_Read
  update: U_athleteFields_updatedAt_Update
  delete: U_athleteFields_updatedAt_Delete
}

type U_athleteFields_updatedAt_Create {
  permission: Boolean!
}

type U_athleteFields_updatedAt_Read {
  permission: Boolean!
}

type U_athleteFields_updatedAt_Update {
  permission: Boolean!
}

type U_athleteFields_updatedAt_Delete {
  permission: Boolean!
}

type U_athleteFields_createdAt {
  create: U_athleteFields_createdAt_Create
  read: U_athleteFields_createdAt_Read
  update: U_athleteFields_createdAt_Update
  delete: U_athleteFields_createdAt_Delete
}

type U_athleteFields_createdAt_Create {
  permission: Boolean!
}

type U_athleteFields_createdAt_Read {
  permission: Boolean!
}

type U_athleteFields_createdAt_Update {
  permission: Boolean!
}

type U_athleteFields_createdAt_Delete {
  permission: Boolean!
}

type U_athleteCreateAccess {
  permission: Boolean!
  where: JSONObject
}

type U_athleteReadAccess {
  permission: Boolean!
  where: JSONObject
}

type U_athleteUpdateAccess {
  permission: Boolean!
  where: JSONObject
}

type U_athleteDeleteAccess {
  permission: Boolean!
  where: JSONObject
}

type u_coachAccess {
  fields: U_coachFields
  create: U_coachCreateAccess
  read: U_coachReadAccess
  update: U_coachUpdateAccess
  delete: U_coachDeleteAccess
}

type U_coachFields {
  user: U_coachFields_user
  name: U_coachFields_name
  sport: U_coachFields_sport
  club: U_coachFields_club
  athletes: U_coachFields_athletes
  updatedAt: U_coachFields_updatedAt
  createdAt: U_coachFields_createdAt
}

type U_coachFields_user {
  create: U_coachFields_user_Create
  read: U_coachFields_user_Read
  update: U_coachFields_user_Update
  delete: U_coachFields_user_Delete
}

type U_coachFields_user_Create {
  permission: Boolean!
}

type U_coachFields_user_Read {
  permission: Boolean!
}

type U_coachFields_user_Update {
  permission: Boolean!
}

type U_coachFields_user_Delete {
  permission: Boolean!
}

type U_coachFields_name {
  create: U_coachFields_name_Create
  read: U_coachFields_name_Read
  update: U_coachFields_name_Update
  delete: U_coachFields_name_Delete
}

type U_coachFields_name_Create {
  permission: Boolean!
}

type U_coachFields_name_Read {
  permission: Boolean!
}

type U_coachFields_name_Update {
  permission: Boolean!
}

type U_coachFields_name_Delete {
  permission: Boolean!
}

type U_coachFields_sport {
  create: U_coachFields_sport_Create
  read: U_coachFields_sport_Read
  update: U_coachFields_sport_Update
  delete: U_coachFields_sport_Delete
}

type U_coachFields_sport_Create {
  permission: Boolean!
}

type U_coachFields_sport_Read {
  permission: Boolean!
}

type U_coachFields_sport_Update {
  permission: Boolean!
}

type U_coachFields_sport_Delete {
  permission: Boolean!
}

type U_coachFields_club {
  create: U_coachFields_club_Create
  read: U_coachFields_club_Read
  update: U_coachFields_club_Update
  delete: U_coachFields_club_Delete
}

type U_coachFields_club_Create {
  permission: Boolean!
}

type U_coachFields_club_Read {
  permission: Boolean!
}

type U_coachFields_club_Update {
  permission: Boolean!
}

type U_coachFields_club_Delete {
  permission: Boolean!
}

type U_coachFields_athletes {
  create: U_coachFields_athletes_Create
  read: U_coachFields_athletes_Read
  update: U_coachFields_athletes_Update
  delete: U_coachFields_athletes_Delete
}

type U_coachFields_athletes_Create {
  permission: Boolean!
}

type U_coachFields_athletes_Read {
  permission: Boolean!
}

type U_coachFields_athletes_Update {
  permission: Boolean!
}

type U_coachFields_athletes_Delete {
  permission: Boolean!
}

type U_coachFields_updatedAt {
  create: U_coachFields_updatedAt_Create
  read: U_coachFields_updatedAt_Read
  update: U_coachFields_updatedAt_Update
  delete: U_coachFields_updatedAt_Delete
}

type U_coachFields_updatedAt_Create {
  permission: Boolean!
}

type U_coachFields_updatedAt_Read {
  permission: Boolean!
}

type U_coachFields_updatedAt_Update {
  permission: Boolean!
}

type U_coachFields_updatedAt_Delete {
  permission: Boolean!
}

type U_coachFields_createdAt {
  create: U_coachFields_createdAt_Create
  read: U_coachFields_createdAt_Read
  update: U_coachFields_createdAt_Update
  delete: U_coachFields_createdAt_Delete
}

type U_coachFields_createdAt_Create {
  permission: Boolean!
}

type U_coachFields_createdAt_Read {
  permission: Boolean!
}

type U_coachFields_createdAt_Update {
  permission: Boolean!
}

type U_coachFields_createdAt_Delete {
  permission: Boolean!
}

type U_coachCreateAccess {
  permission: Boolean!
  where: JSONObject
}

type U_coachReadAccess {
  permission: Boolean!
  where: JSONObject
}

type U_coachUpdateAccess {
  permission: Boolean!
  where: JSONObject
}

type U_coachDeleteAccess {
  permission: Boolean!
  where: JSONObject
}

type test_resultsAccess {
  fields: Test_resultsFields
  create: Test_resultsCreateAccess
  read: Test_resultsReadAccess
  update: Test_resultsUpdateAccess
  delete: Test_resultsDeleteAccess
}

type Test_resultsFields {
  athlete: Test_resultsFields_athlete
  testType: Test_resultsFields_testType
  resultData: Test_resultsFields_resultData
  date: Test_resultsFields_date
  notes: Test_resultsFields_notes
  updatedAt: Test_resultsFields_updatedAt
  createdAt: Test_resultsFields_createdAt
}

type Test_resultsFields_athlete {
  create: Test_resultsFields_athlete_Create
  read: Test_resultsFields_athlete_Read
  update: Test_resultsFields_athlete_Update
  delete: Test_resultsFields_athlete_Delete
}

type Test_resultsFields_athlete_Create {
  permission: Boolean!
}

type Test_resultsFields_athlete_Read {
  permission: Boolean!
}

type Test_resultsFields_athlete_Update {
  permission: Boolean!
}

type Test_resultsFields_athlete_Delete {
  permission: Boolean!
}

type Test_resultsFields_testType {
  create: Test_resultsFields_testType_Create
  read: Test_resultsFields_testType_Read
  update: Test_resultsFields_testType_Update
  delete: Test_resultsFields_testType_Delete
}

type Test_resultsFields_testType_Create {
  permission: Boolean!
}

type Test_resultsFields_testType_Read {
  permission: Boolean!
}

type Test_resultsFields_testType_Update {
  permission: Boolean!
}

type Test_resultsFields_testType_Delete {
  permission: Boolean!
}

type Test_resultsFields_resultData {
  create: Test_resultsFields_resultData_Create
  read: Test_resultsFields_resultData_Read
  update: Test_resultsFields_resultData_Update
  delete: Test_resultsFields_resultData_Delete
}

type Test_resultsFields_resultData_Create {
  permission: Boolean!
}

type Test_resultsFields_resultData_Read {
  permission: Boolean!
}

type Test_resultsFields_resultData_Update {
  permission: Boolean!
}

type Test_resultsFields_resultData_Delete {
  permission: Boolean!
}

type Test_resultsFields_date {
  create: Test_resultsFields_date_Create
  read: Test_resultsFields_date_Read
  update: Test_resultsFields_date_Update
  delete: Test_resultsFields_date_Delete
}

type Test_resultsFields_date_Create {
  permission: Boolean!
}

type Test_resultsFields_date_Read {
  permission: Boolean!
}

type Test_resultsFields_date_Update {
  permission: Boolean!
}

type Test_resultsFields_date_Delete {
  permission: Boolean!
}

type Test_resultsFields_notes {
  create: Test_resultsFields_notes_Create
  read: Test_resultsFields_notes_Read
  update: Test_resultsFields_notes_Update
  delete: Test_resultsFields_notes_Delete
}

type Test_resultsFields_notes_Create {
  permission: Boolean!
}

type Test_resultsFields_notes_Read {
  permission: Boolean!
}

type Test_resultsFields_notes_Update {
  permission: Boolean!
}

type Test_resultsFields_notes_Delete {
  permission: Boolean!
}

type Test_resultsFields_updatedAt {
  create: Test_resultsFields_updatedAt_Create
  read: Test_resultsFields_updatedAt_Read
  update: Test_resultsFields_updatedAt_Update
  delete: Test_resultsFields_updatedAt_Delete
}

type Test_resultsFields_updatedAt_Create {
  permission: Boolean!
}

type Test_resultsFields_updatedAt_Read {
  permission: Boolean!
}

type Test_resultsFields_updatedAt_Update {
  permission: Boolean!
}

type Test_resultsFields_updatedAt_Delete {
  permission: Boolean!
}

type Test_resultsFields_createdAt {
  create: Test_resultsFields_createdAt_Create
  read: Test_resultsFields_createdAt_Read
  update: Test_resultsFields_createdAt_Update
  delete: Test_resultsFields_createdAt_Delete
}

type Test_resultsFields_createdAt_Create {
  permission: Boolean!
}

type Test_resultsFields_createdAt_Read {
  permission: Boolean!
}

type Test_resultsFields_createdAt_Update {
  permission: Boolean!
}

type Test_resultsFields_createdAt_Delete {
  permission: Boolean!
}

type Test_resultsCreateAccess {
  permission: Boolean!
  where: JSONObject
}

type Test_resultsReadAccess {
  permission: Boolean!
  where: JSONObject
}

type Test_resultsUpdateAccess {
  permission: Boolean!
  where: JSONObject
}

type Test_resultsDeleteAccess {
  permission: Boolean!
  where: JSONObject
}

type c_sport_testAccess {
  fields: C_sport_testFields
  create: C_sport_testCreateAccess
  read: C_sport_testReadAccess
  update: C_sport_testUpdateAccess
  delete: C_sport_testDeleteAccess
}

type C_sport_testFields {
  name: C_sport_testFields_name
  short_name: C_sport_testFields_short_name
  description: C_sport_testFields_description
  updatedAt: C_sport_testFields_updatedAt
  createdAt: C_sport_testFields_createdAt
}

type C_sport_testFields_name {
  create: C_sport_testFields_name_Create
  read: C_sport_testFields_name_Read
  update: C_sport_testFields_name_Update
  delete: C_sport_testFields_name_Delete
}

type C_sport_testFields_name_Create {
  permission: Boolean!
}

type C_sport_testFields_name_Read {
  permission: Boolean!
}

type C_sport_testFields_name_Update {
  permission: Boolean!
}

type C_sport_testFields_name_Delete {
  permission: Boolean!
}

type C_sport_testFields_short_name {
  create: C_sport_testFields_short_name_Create
  read: C_sport_testFields_short_name_Read
  update: C_sport_testFields_short_name_Update
  delete: C_sport_testFields_short_name_Delete
}

type C_sport_testFields_short_name_Create {
  permission: Boolean!
}

type C_sport_testFields_short_name_Read {
  permission: Boolean!
}

type C_sport_testFields_short_name_Update {
  permission: Boolean!
}

type C_sport_testFields_short_name_Delete {
  permission: Boolean!
}

type C_sport_testFields_description {
  create: C_sport_testFields_description_Create
  read: C_sport_testFields_description_Read
  update: C_sport_testFields_description_Update
  delete: C_sport_testFields_description_Delete
}

type C_sport_testFields_description_Create {
  permission: Boolean!
}

type C_sport_testFields_description_Read {
  permission: Boolean!
}

type C_sport_testFields_description_Update {
  permission: Boolean!
}

type C_sport_testFields_description_Delete {
  permission: Boolean!
}

type C_sport_testFields_updatedAt {
  create: C_sport_testFields_updatedAt_Create
  read: C_sport_testFields_updatedAt_Read
  update: C_sport_testFields_updatedAt_Update
  delete: C_sport_testFields_updatedAt_Delete
}

type C_sport_testFields_updatedAt_Create {
  permission: Boolean!
}

type C_sport_testFields_updatedAt_Read {
  permission: Boolean!
}

type C_sport_testFields_updatedAt_Update {
  permission: Boolean!
}

type C_sport_testFields_updatedAt_Delete {
  permission: Boolean!
}

type C_sport_testFields_createdAt {
  create: C_sport_testFields_createdAt_Create
  read: C_sport_testFields_createdAt_Read
  update: C_sport_testFields_createdAt_Update
  delete: C_sport_testFields_createdAt_Delete
}

type C_sport_testFields_createdAt_Create {
  permission: Boolean!
}

type C_sport_testFields_createdAt_Read {
  permission: Boolean!
}

type C_sport_testFields_createdAt_Update {
  permission: Boolean!
}

type C_sport_testFields_createdAt_Delete {
  permission: Boolean!
}

type C_sport_testCreateAccess {
  permission: Boolean!
  where: JSONObject
}

type C_sport_testReadAccess {
  permission: Boolean!
  where: JSONObject
}

type C_sport_testUpdateAccess {
  permission: Boolean!
  where: JSONObject
}

type C_sport_testDeleteAccess {
  permission: Boolean!
  where: JSONObject
}

type payload_preferencesAccess {
  fields: PayloadPreferencesFields
  create: PayloadPreferencesCreateAccess
  read: PayloadPreferencesReadAccess
  update: PayloadPreferencesUpdateAccess
  delete: PayloadPreferencesDeleteAccess
}

type PayloadPreferencesFields {
  user: PayloadPreferencesFields_user
  key: PayloadPreferencesFields_key
  value: PayloadPreferencesFields_value
  updatedAt: PayloadPreferencesFields_updatedAt
  createdAt: PayloadPreferencesFields_createdAt
}

type PayloadPreferencesFields_user {
  create: PayloadPreferencesFields_user_Create
  read: PayloadPreferencesFields_user_Read
  update: PayloadPreferencesFields_user_Update
  delete: PayloadPreferencesFields_user_Delete
}

type PayloadPreferencesFields_user_Create {
  permission: Boolean!
}

type PayloadPreferencesFields_user_Read {
  permission: Boolean!
}

type PayloadPreferencesFields_user_Update {
  permission: Boolean!
}

type PayloadPreferencesFields_user_Delete {
  permission: Boolean!
}

type PayloadPreferencesFields_key {
  create: PayloadPreferencesFields_key_Create
  read: PayloadPreferencesFields_key_Read
  update: PayloadPreferencesFields_key_Update
  delete: PayloadPreferencesFields_key_Delete
}

type PayloadPreferencesFields_key_Create {
  permission: Boolean!
}

type PayloadPreferencesFields_key_Read {
  permission: Boolean!
}

type PayloadPreferencesFields_key_Update {
  permission: Boolean!
}

type PayloadPreferencesFields_key_Delete {
  permission: Boolean!
}

type PayloadPreferencesFields_value {
  create: PayloadPreferencesFields_value_Create
  read: PayloadPreferencesFields_value_Read
  update: PayloadPreferencesFields_value_Update
  delete: PayloadPreferencesFields_value_Delete
}

type PayloadPreferencesFields_value_Create {
  permission: Boolean!
}

type PayloadPreferencesFields_value_Read {
  permission: Boolean!
}

type PayloadPreferencesFields_value_Update {
  permission: Boolean!
}

type PayloadPreferencesFields_value_Delete {
  permission: Boolean!
}

type PayloadPreferencesFields_updatedAt {
  create: PayloadPreferencesFields_updatedAt_Create
  read: PayloadPreferencesFields_updatedAt_Read
  update: PayloadPreferencesFields_updatedAt_Update
  delete: PayloadPreferencesFields_updatedAt_Delete
}

type PayloadPreferencesFields_updatedAt_Create {
  permission: Boolean!
}

type PayloadPreferencesFields_updatedAt_Read {
  permission: Boolean!
}

type PayloadPreferencesFields_updatedAt_Update {
  permission: Boolean!
}

type PayloadPreferencesFields_updatedAt_Delete {
  permission: Boolean!
}

type PayloadPreferencesFields_createdAt {
  create: PayloadPreferencesFields_createdAt_Create
  read: PayloadPreferencesFields_createdAt_Read
  update: PayloadPreferencesFields_createdAt_Update
  delete: PayloadPreferencesFields_createdAt_Delete
}

type PayloadPreferencesFields_createdAt_Create {
  permission: Boolean!
}

type PayloadPreferencesFields_createdAt_Read {
  permission: Boolean!
}

type PayloadPreferencesFields_createdAt_Update {
  permission: Boolean!
}

type PayloadPreferencesFields_createdAt_Delete {
  permission: Boolean!
}

type PayloadPreferencesCreateAccess {
  permission: Boolean!
  where: JSONObject
}

type PayloadPreferencesReadAccess {
  permission: Boolean!
  where: JSONObject
}

type PayloadPreferencesUpdateAccess {
  permission: Boolean!
  where: JSONObject
}

type PayloadPreferencesDeleteAccess {
  permission: Boolean!
  where: JSONObject
}

type Mutation {
  createMedia(data: mutationMediaInput!): Media
  updateMedia(id: String!, autosave: Boolean, data: mutationMediaUpdateInput!): Media
  deleteMedia(id: String!): Media
  createUser(data: mutationUserInput!): User
  updateUser(id: String!, autosave: Boolean, data: mutationUserUpdateInput!): User
  deleteUser(id: String!): User
  refreshTokenUser: usersRefreshedUser
  logoutUser: String
  unlockUser(email: String!): Boolean!
  loginUser(email: String, password: String): usersLoginResult
  forgotPasswordUser(disableEmail: Boolean, email: String!, expiration: Int): Boolean!
  resetPasswordUser(password: String, token: String): usersResetPassword
  verifyEmailUser(token: String): Boolean
  createC_sport(data: mutationC_sportInput!): C_sport
  updateC_sport(id: String!, autosave: Boolean, data: mutationC_sportUpdateInput!): C_sport
  deleteC_sport(id: String!): C_sport
  createC_sport_club(data: mutationC_sport_clubInput!): C_sport_club
  updateC_sport_club(id: String!, autosave: Boolean, data: mutationC_sport_clubUpdateInput!): C_sport_club
  deleteC_sport_club(id: String!): C_sport_club
  createU_athlete(data: mutationU_athleteInput!): U_athlete
  updateU_athlete(id: String!, autosave: Boolean, data: mutationU_athleteUpdateInput!): U_athlete
  deleteU_athlete(id: String!): U_athlete
  createU_coach(data: mutationU_coachInput!): U_coach
  updateU_coach(id: String!, autosave: Boolean, data: mutationU_coachUpdateInput!): U_coach
  deleteU_coach(id: String!): U_coach
  createTest_result(data: mutationTest_resultInput!): Test_result
  updateTest_result(id: String!, autosave: Boolean, data: mutationTest_resultUpdateInput!): Test_result
  deleteTest_result(id: String!): Test_result
  createC_sport_test(data: mutationC_sport_testInput!): C_sport_test
  updateC_sport_test(id: String!, autosave: Boolean, data: mutationC_sport_testUpdateInput!): C_sport_test
  deleteC_sport_test(id: String!): C_sport_test
  createPayloadPreference(data: mutationPayloadPreferenceInput!): PayloadPreference
  updatePayloadPreference(id: String!, autosave: Boolean, data: mutationPayloadPreferenceUpdateInput!): PayloadPreference
  deletePayloadPreference(id: String!): PayloadPreference
}

input mutationMediaInput {
  title: String!
  date: String!
  user: String
  alt: String
  caption: JSON
  updatedAt: String
  createdAt: String
  url: String
  filename: String
  mimeType: String
  filesize: Float
  width: Float
  height: Float
  focalX: Float
  focalY: Float
}

input mutationMediaUpdateInput {
  title: String
  date: String
  user: String
  alt: String
  caption: JSON
  updatedAt: String
  createdAt: String
  url: String
  filename: String
  mimeType: String
  filesize: Float
  width: Float
  height: Float
  focalX: Float
  focalY: Float
}

input mutationUserInput {
  name: String
  roles: [User_roles_MutationInput]
  updatedAt: String
  createdAt: String
  email: String!
  resetPasswordToken: String
  resetPasswordExpiration: String
  salt: String
  hash: String
  loginAttempts: Float
  lockUntil: String
  password: String!
}

enum User_roles_MutationInput {
  admin
  user
  sportCoach
}

input mutationUserUpdateInput {
  name: String
  roles: [UserUpdate_roles_MutationInput]
  updatedAt: String
  createdAt: String
  email: String
  resetPasswordToken: String
  resetPasswordExpiration: String
  salt: String
  hash: String
  loginAttempts: Float
  lockUntil: String
  password: String
}

enum UserUpdate_roles_MutationInput {
  admin
  user
  sportCoach
}

type usersRefreshedUser {
  exp: Int
  refreshedToken: String
  strategy: String
  user: usersJWT
}

type usersJWT {
  email: EmailAddress!
  collection: String!
}

type usersLoginResult {
  exp: Int
  token: String
  user: User
}

type usersResetPassword {
  token: String
  user: User
}

input mutationC_sportInput {
  name: String!
  info: String
  updatedAt: String
  createdAt: String
}

input mutationC_sportUpdateInput {
  name: String
  info: String
  updatedAt: String
  createdAt: String
}

input mutationC_sport_clubInput {
  name: String!
  short_name: String
  sport: String
  updatedAt: String
  createdAt: String
}

input mutationC_sport_clubUpdateInput {
  name: String
  short_name: String
  sport: String
  updatedAt: String
  createdAt: String
}

input mutationU_athleteInput {
  user: String
  name: String
  birth_date: String!
  gender: U_athlete_gender_MutationInput
  sport: [String]
  club: String
  updatedAt: String
  createdAt: String
}

enum U_athlete_gender_MutationInput {
  muz
  zena
}

input mutationU_athleteUpdateInput {
  user: String
  name: String
  birth_date: String
  gender: U_athleteUpdate_gender_MutationInput
  sport: [String]
  club: String
  updatedAt: String
  createdAt: String
}

enum U_athleteUpdate_gender_MutationInput {
  muz
  zena
}

input mutationU_coachInput {
  user: String
  name: String
  sport: [String]
  club: String
  athletes: [String]
  updatedAt: String
  createdAt: String
}

input mutationU_coachUpdateInput {
  user: String
  name: String
  sport: [String]
  club: String
  athletes: [String]
  updatedAt: String
  createdAt: String
}

input mutationTest_resultInput {
  athlete: String
  testType: String
  resultData: String!
  date: String!
  notes: String
  updatedAt: String
  createdAt: String
}

input mutationTest_resultUpdateInput {
  athlete: String
  testType: String
  resultData: String
  date: String
  notes: String
  updatedAt: String
  createdAt: String
}

input mutationC_sport_testInput {
  name: String!
  short_name: String!
  description: String
  updatedAt: String
  createdAt: String
}

input mutationC_sport_testUpdateInput {
  name: String
  short_name: String
  description: String
  updatedAt: String
  createdAt: String
}

input mutationPayloadPreferenceInput {
  user: PayloadPreference_UserRelationshipInput
  key: String
  value: JSON
  updatedAt: String
  createdAt: String
}

input PayloadPreference_UserRelationshipInput {
  relationTo: PayloadPreference_UserRelationshipInputRelationTo
  value: JSON
}

enum PayloadPreference_UserRelationshipInputRelationTo {
  users
}

input mutationPayloadPreferenceUpdateInput {
  user: PayloadPreferenceUpdate_UserRelationshipInput
  key: String
  value: JSON
  updatedAt: String
  createdAt: String
}

input PayloadPreferenceUpdate_UserRelationshipInput {
  relationTo: PayloadPreferenceUpdate_UserRelationshipInputRelationTo
  value: JSON
}

enum PayloadPreferenceUpdate_UserRelationshipInputRelationTo {
  users
}